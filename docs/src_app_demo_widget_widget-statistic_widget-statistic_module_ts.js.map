{"version":3,"file":"src_app_demo_widget_widget-statistic_widget-statistic_module_ts.js","mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oCAAoC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oCAAoC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4BAA4B,sDAAe,CAAC,uDAAmB;AAChH,gCAAgC,gEAAyB,GAAG,0CAA0C,6BAA6B;AACnI;AACA,MAAM,MAAM,uDAAY;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yCAAO;AAChD;AACA;AACA;AACA,yCAAyC,yCAAO;AAChD;AACA;AACA;AACA,4CAA4C,yCAAO;AACnD;AACA;AACA;AACA,6CAA6C,yCAAO;AACpD;AACA;AACA;AACA,uCAAuC,yCAAO;AAC9C;AACA;AACA;AACA,wCAAwC,yCAAO;AAC/C;AACA;AACA;AACA,oCAAoC,yCAAO;AAC3C;AACA;AACA;AACA,qCAAqC,yCAAO;AAC5C;AACA;AACA;AACA,qCAAqC,yCAAO;AAC5C;AACA;AACA;AACA,uCAAuC,yCAAO;AAC9C;AACA;AACA;AACA,kCAAkC,yCAAO;AACzC;AACA;AACA;AACA,qCAAqC,yCAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,wDAAwD;AACxD;AACA;AACA;AACA,sCAAsC,oBAAoB,EAAE,SAAS;AACrE;AACA;AACA;AACA,qBAAqB;AACrB;AACA,sCAAsC,oBAAoB,EAAE,SAAS;AACrE;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzsDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,uCAAuC,KAAK,kBAAkB,OAAO,EAAE,IAAI,GAAG,cAAc,uBAAuB,IAAI,GAAG,mBAAmB;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,kCAAkC,YAAY,0CAA0C;AACxF,qCAAqC;AACrC,mCAAmC,YAAY,0CAA0C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,wCAAwC,8JAA8J;AAC1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,YAAY,qCAAqC;AACrG;AACA;AACA;AACA;AACA;AACA,uCAAuaAAa;AACbaAAa;AACb;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC,sDAAe;AAC9G,sCAAsC,gEAAyB,GAAG,gDAAgD,mCAAmC;AACrJ;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,mDAAG;AACxF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6EAA6E,sDAAM,6CAA6C,mDAAG;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iFAAiF,mDAAG;AACpF;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,2CAAK;AAC/B,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,oCAAoC,sDAAe;AACpH,wCAAwC,gEAAyB,GAAG,kDAAkD,qCAAqC;AAC3J;AACA,MAAM;AACN;;AAEA,YAAY,aAAa;AACzB;AACA;AACA;AACA,mBAAmB,yDAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,uCAAuC,gEAAyB,GAAG,iDAAiD,oCAAoC;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kEAAiB;AACzB;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAW;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,yDAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,yCAAyC,gEAAyB,GAAG,mDAAmD,sCAAsC;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kEAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAW;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,mDAAG;AACxF;AACA;AACA;AACA,SAAS;AACT,6EAA6E,mDAAG;AAChF;AACA,SAAS;AACT,qEAAqE,mDAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,2CAAK;AACpC,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wCAAE,oBAAoB,yDAAS,qDAAqD,qDAAK,IAAI,sDAAM,2CAA2C,mDAAG,wDAAwD;AACjN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC,sDAAe,mBAAmB,sDAAe,UAAU,sDAAe;AACzK,sCAAsC,gEAAyB,GAAG,gDAAgD,mCAAmC;AACrJ;AACA,MAAM,uBAAuB;AAC7B,MAAM,gCAAgC,MAAM,iDAAM,mBAAmB,GAAG;AACxE,MAAM,gCAAgC,MAAM,iDAAM,qBAAqB;AACvE;AACA,kBAAkB,kDAAU,GAAG,+CAAO,IAAI,qDAAM;AAChD,IAAI,+CAAO,IAAI,qDAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,mDAAG;AACxF;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,2CAAK,+DAA+D,mDAAG;AACtG,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC,sDAAe;AAC9G,sCAAsC,gEAAyB,GAAG,gDAAgD,mCAAmC;AACrJ;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,mDAAG;AAC9E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,2CAAK,4DAA4D,mDAAG;AACzG,iFAAiF,mDAAG;AACpF;AACA;AACA;AACA,SAAS;AACT,8BAA8B,2CAAK;AACnC,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2DAA2D,iCAAiC,sDAAe;AAC3G,qCAAqC,gEAAyB,GAAG,+CAA+C,kCAAkC;AAClJ;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,mDAAG;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6EAA6E,mDAAG;AAChF;AACA;AACA;AACA,SAAS;AACT,iFAAiF,mDAAG;AACpF;AACA;AACA;AACA,SAAS;AACT,4BAA4B,2CAAK;AACjC,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAiE,oCAAoC,sDAAe;AACpH,wCAAwC,gEAAyB,GAAG,kDAAkD,qCAAqC;AAC3J;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wCAAE,kBAAkB,qDAAI;AAClD;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,mDAAG;AACxF,6EAA6E,mDAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kDAAkD;AACjG;AACA,SAAS;AACT,8BAA8B,2CAAK;AACnC,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAI;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD,8BAA8B,sDAAe,mBAAmB,sDAAe,CAAC,4DAAqB,MAAM,sDAAe,CAAC,oDAAa;AAC7L,kCAAkC,gEAAyB,GAAG,4CAA4C,+BAA+B;AACzI;AACA,MAAM,uBAAuB;AAC7B,MAAM,MAAM,4DAAc,iBAAiB,MAAM,mDAAQ,EAAE,GAAG;AAC9D,MAAM,MAAM,oDAAM,iBAAiB,MAAM,mDAAQ,EAAE;AACnD;AACA,cAAc,kDAAU,GAAG,+CAAO,IAAI,uDAAQ;AAC9C,IAAI,+CAAO,IAAI,uDAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,yCAAyC,+DAAwB,CAAC,sDAAkB;AAC/J,4CAA4C,+DAAwB,GAAG,2FAA2F,oGAAoG;AACtQ;AACA,MAAM,MAAM,sDAAW;AACvB;AACA,kDAAU;AACV,IAAI,oDAAK;AACT;AACA,kDAAU;AACV,IAAI,oDAAK;AACT;AACA,kDAAU;AACV,IAAI,oDAAK;AACT;AACA,kDAAU;AACV,IAAI,oDAAK;AACT;AACA,kDAAU;AACV,IAAI,oDAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAY;AAC1C,4BAA4B,uDAAY;AACxC,0BAA0B,uDAAY;AACtC,2BAA2B,uDAAY;AACvC,+BAA+B,uDAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mDAAG;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,mDAAG;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qFAAqF,mDAAG;AACxF;AACA;AACA;AACA,SAAS;AACT,mFAAmF,mDAAG;AACtF;AACA;AACA;AACA,SAAS;AACT,2EAA2E,mDAAG;AAC9E;AACA;AACA;AACA,SAAS;AACT,4EAA4E,yDAAS;AACrF,oCAAoC,wCAAE,aAAa,sDAAM,4CAA4C,yDAAS,OAAO,2CAAI,oBAAoB,qDAAI,wBAAwB,qDAAI,uCAAuC,oDAAG;AACvN;AACA;AACA,qDAAqD,YAAY,wBAAwB;AACzF,aAAa,GAAG,wDAAO,IAAI,oDAAG;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,mBAAmB,2CAAK;AACxB,SAAS,GAAG,mDAAG;AACf;AACA;AACA;AACA;AACA,SAAS;AACT,2EAA2E,mDAAG;AAC9E;AACA,iCAAiC,6CAA6C;AAC9E,SAAS,GAAG,yDAAS,mDAAmD,oDAAG,kDAAkD,yDAAS;AACtI;AACA,sEAAsE,qDAAK;AAC3E;AACA;AACA,uBAAuB,wCAAE;AACzB;AACA,SAAS,GAAG,mDAAG;AACf,iCAAiC,8CAA8C;AAC/E,SAAS;AACT,+BAA+B,2CAAK;AACpC,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAM,uGAAuG,sDAAK;AACxI;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,oCAAoC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,iBAAiB,+DAAwB,mBAAmB,+DAAwB,qBAAqB,+DAAwB,mBAAmB,+DAAwB,mBAAmB,+DAAwB,kBAAkB,+DAAwB,qBAAqB,+DAAwB,eAAe,+DAAwB,aAAa,+DAAwB,CAAC,4DAAwB,GAAG,+DAAwB;AACxlB,uCAAuC,+DAAwB,GAAG,yIAAyI;AAC3M,QAAQ,4DAAqB;AAC7B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,mEAAmE;AAC1E,QAAQ,wDAAiB,8FAA8F,wCAAwC,SAAS,+DAAwB;AAChM,OAAO,YAAY,oBAAoB,aAAa,kHAAkH,aAAa,gEAAyB;AAC5M;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+nBAA+nB;AAC/nB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,+EAA+E,4BAA4B,kFAAkF,2BAA2B,kFAAkF,4BAA4B,8EAA8E,2BAA2B;AACxc,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,MAAM;AACN,QAAQ,wDAAiB,YAAY,6DAAsB;AAC3D,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,OAAO,4BAA4B,QAAQ,oDAAc,EAAE,iDAAW,kBAAkB,oDAAc,IAAI,4CAA4C,iBAAiB,IAAI;AAC3K;AACA,MAAM,MAAM,qDAAU,EAAE;AACxB,MAAM,qBAAqB;AAC3B,MAAM,uBAAuB;AAC7B,MAAM,yBAAyB;AAC/B,MAAM,uBAAuB;AAC7B,MAAM,uBAAuB;AAC7B,MAAM,sBAAsB;AAC5B,MAAM,yBAAyB;AAC/B,MAAM,mBAAmB;AACzB,MAAM,iBAAiB;AACvB,MAAM,MAAM,4DAAiB,EAAE;AAC/B,MAAM,gCAAgC,MAAM,iDAAM,qBAAqB;AACvE;AACA,kDAAU;AACV,IAAI,8DAAe;AACnB;AACA,kDAAU;AACV,IAAI,qDAAM;AACV;AACA,kDAAU;AACV,IAAI,qDAAM;AACV;AACA,kDAAU;AACV,IAAI,qDAAM;AACV;AACA,kDAAU;AACV,IAAI,qDAAM;AACV;AACA,kDAAU;AACV,IAAI,qDAAM;AACV;AACA,kDAAU;AACV,IAAI,oDAAK;AACT;AACA,kDAAU;AACV,IAAI,2DAAY;AAChB;AACA,oBAAoB,kDAAU,GAAG,+CAAO,KAAK,qDAAM;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yCAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAK;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,WAAW;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","sources":["./src/app/demo/widget/widget-statistic/widget-statistic-routing.module.ts","./src/app/demo/widget/widget-statistic/widget-statistic.component.ts","./src/app/demo/widget/widget-statistic/widget-statistic.component.html","./src/app/demo/widget/widget-statistic/widget-statistic.module.ts","./node_modules/ngx-owl-carousel-o/__ivy_ngcc__/fesm2015/ngx-owl-carousel-o.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./node_modules/rxjs/_esm2015/internal/operators/toArray.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WidgetStatisticComponent } from './widget-statistic.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: WidgetStatisticComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class WidgetStatisticRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\n\n@Component({\n    selector: 'app-widget-statistic',\n    templateUrl: './widget-statistic.component.html',\n    styleUrls: ['./widget-statistic.component.scss']\n})\nexport class WidgetStatisticComponent implements OnInit {\n    public customOptions: OwlOptions = {\n        loop: true,\n        mouseDrag: false,\n        touchDrag: false,\n        pullDrag: false,\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        autoplayTimeout: 5000,\n        navText: ['', ''],\n        responsive: {\n            0: {\n                items: 1\n            },\n            400: {\n                items: 2\n            },\n            740: {\n                items: 3\n            },\n            940: {\n                items: 4\n            }\n        },\n        nav: false\n    };\n    public slideOptions: OwlOptions = {\n        loop: true,\n        mouseDrag: false,\n        touchDrag: false,\n        pullDrag: false,\n        dots: false,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        autoplayTimeout: 5000,\n        navText: ['', ''],\n        responsive: {\n            0: {\n                items: 1\n            },\n            400: {\n                items: 1\n            },\n            740: {\n                items: 1\n            },\n            940: {\n                items: 1\n            }\n        }\n    };\n    public deviceProgressBar: any;\n\n    constructor() {\n        this.deviceProgressBar = [\n            {\n                type: 'success',\n                value: 66\n            },\n            {\n                type: 'primary',\n                value: 26\n            },\n            {\n                type: 'danger',\n                value: 8\n            }\n        ];\n    }\n\n    ngOnInit() {}\n}\n","<div class=\"row\">\n    <!-- page statistic card start -->\n    <div class=\"col-lg-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" [isCardFooter]=\"true\" footerClass=\"bg-c-yellow\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-8\">\n                    <h4 class=\"text-c-yellow\">$30200</h4>\n                    <h6 class=\"text-muted m-b-0\">All Earnings</h6>\n                </div>\n                <div class=\"col-4 text-right\">\n                    <i class=\"feather icon-bar-chart-2 f-28\"></i>\n                </div>\n            </div>\n            <div class=\"app-card-footer\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-9\">\n                        <p class=\"text-white m-b-0\">% change</p>\n                    </div>\n                    <div class=\"col-3 text-right\">\n                        <i class=\"feather icon-trending-up text-white f-16\"></i>\n                    </div>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-lg-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" [isCardFooter]=\"true\" footerClass=\"bg-c-green\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-8\">\n                    <h4 class=\"text-c-green\">290+</h4>\n                    <h6 class=\"text-muted m-b-0\">Page Views</h6>\n                </div>\n                <div class=\"col-4 text-right\">\n                    <i class=\"feather icon-file-text f-28\"></i>\n                </div>\n            </div>\n            <div class=\"app-card-footer\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-9\">\n                        <p class=\"text-white m-b-0\">% change</p>\n                    </div>\n                    <div class=\"col-3 text-right\">\n                        <i class=\"feather icon-trending-up text-white f-16\"></i>\n                    </div>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-lg-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" [isCardFooter]=\"true\" footerClass=\"bg-c-red\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-8\">\n                    <h4 class=\"text-c-red\">145</h4>\n                    <h6 class=\"text-muted m-b-0\">Task</h6>\n                </div>\n                <div class=\"col-4 text-right\">\n                    <i class=\"feather icon-calendar f-28\"></i>\n                </div>\n            </div>\n            <div class=\"app-card-footer\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-9\">\n                        <p class=\"text-white m-b-0\">% change</p>\n                    </div>\n                    <div class=\"col-3 text-right\">\n                        <i class=\"feather icon-trending-down text-white f-16\"></i>\n                    </div>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-lg-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" [isCardFooter]=\"true\" footerClass=\"bg-c-blue\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-8\">\n                    <h4 class=\"text-c-blue\">500</h4>\n                    <h6 class=\"text-muted m-b-0\">Downloads</h6>\n                </div>\n                <div class=\"col-4 text-right\">\n                    <i class=\"feather icon-thumbs-down f-28\"></i>\n                </div>\n            </div>\n            <div class=\"app-card-footer\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-9\">\n                        <p class=\"text-white m-b-0\">% change</p>\n                    </div>\n                    <div class=\"col-3 text-right\">\n                        <i class=\"feather icon-trending-down text-white f-16\"></i>\n                    </div>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <!-- page statistic card end -->\n\n    <!-- widget-statistic start -->\n    <div class=\"col-md-12 col-xl-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"widget-statstic-card\">\n            <div class=\"card-header-left mb-3\">\n                <h5 class=\"mb-0\">Statistics</h5>\n                <p class=\"p-t-10 m-b-0 text-c-yellow\">Compared to last week</p>\n            </div>\n            <i class=\"feather icon-sliders st-icon bg-c-yellow\"></i>\n            <div class=\"text-left\">\n                <h3 class=\"d-inline-block\">5,456</h3>\n                <i class=\"feather icon-arrow-up f-30 text-c-green\"></i>\n                <span class=\"float-right bg-c-yellow\">23%</span>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"widget-statstic-card\">\n            <div class=\"card-header-left mb-3\">\n                <h5 class=\"mb-0\">Unique Visitor</h5>\n                <p class=\"p-t-10 m-b-0 text-c-red\">55% From last 28 hours</p>\n            </div>\n            <i class=\"feather icon-users st-icon bg-c-red txt-lite-color\"></i>\n            <div class=\"text-left\">\n                <h3 class=\"d-inline-block\">3,874</h3>\n                <i class=\"feather icon-arrow-down text-c-red f-30\"></i>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"widget-statstic-card\">\n            <div class=\"card-header-left mb-3\">\n                <h5 class=\"mb-0\">New Orders</h5>\n                <p class=\"p-t-10 m-b-0 text-c-blue\">54% From last month</p>\n            </div>\n            <i class=\"feather icon-shopping-cart st-icon bg-c-blue\"></i>\n            <div class=\"text-left\">\n                <h3 class=\"d-inline-block\">5,456</h3>\n                <i class=\"feather icon-arrow-up text-c-green f-30\"></i>\n            </div>\n        </app-card>\n    </div>\n    <!-- widget-statistic end -->\n\n    <!-- order start -->\n    <div class=\"col-md-12 col-xl-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"bg-c-yellow order-card\">\n            <h6 class=\"text-white\">Revenue</h6>\n            <h2 class=\"text-white\">$42,562</h2>\n            <p class=\"m-b-0\">$5,032 <i class=\"feather icon-arrow-up m-l-10\"></i></p>\n            <i class=\"card-icon feather icon-filter\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"bg-c-blue order-card\">\n            <h6 class=\"text-white\">Orders Received</h6>\n            <h2 class=\"text-white\">486</h2>\n            <p class=\"m-b-0\">$5,032 <i class=\"feather icon-arrow-up m-l-10 m-r-10\"></i>$1,055 <i class=\"feather icon-arrow-down\"></i></p>\n            <i class=\"card-icon feather icon-users\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"bg-c-green order-card\">\n            <h6 class=\"text-white\">Total Sales</h6>\n            <h2 class=\"text-white\">1641</h2>\n            <p class=\"m-b-0\">$5,032 <i class=\"feather icon-arrow-down m-l-10 m-r-10\"></i>$1,055 <i class=\"feather icon-arrow-up\"></i></p>\n            <i class=\"card-icon feather icon-radio\"></i>\n        </app-card>\n    </div>\n    <!-- order end -->\n\n    <!-- subscribe start -->\n    <div class=\"col-md-12 col-lg-4\">\n        <app-card [hidHeader]=\"true\" blockClass=\"text-center\">\n            <i class=\"feather icon-mail text-c-blue d-block f-40\"></i>\n            <h4 class=\"m-t-20\"><span class=\"text-c-blue\">8.62k</span> Subscribers</h4>\n            <p class=\"m-b-20\">Your main list is growing</p>\n            <button class=\"btn btn-primary btn-sm btn-round\">Manage List</button>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-lg-4\">\n        <app-card [hidHeader]=\"true\" blockClass=\"text-center\">\n            <i class=\"feather icon-twitter text-c-green d-block f-40\"></i>\n            <h4 class=\"m-t-20\"><span class=\"text-c-green\">+40</span> Followers</h4>\n            <p class=\"m-b-20\">Your main list is growing</p>\n            <button class=\"btn btn-success btn-sm btn-round\">Check them out</button>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-lg-4\">\n        <app-card [hidHeader]=\"true\" blockClass=\"text-center\">\n            <i class=\"feather icon-briefcase text-c-red d-block f-40\"></i>\n            <h4 class=\"m-t-20\">Business Plan</h4>\n            <p class=\"m-b-20\">This is your current active plan</p>\n            <button class=\"btn btn-danger btn-sm btn-round\">Upgrade to VIP</button>\n        </app-card>\n    </div>\n    <!-- subscribe end -->\n\n    <!-- statistic start -->\n    <div class=\"col-md-6 col-lg-3\">\n        <app-card\n            [hidHeader]=\"true\"\n            cardClass=\"statustic-card\"\n            blockClass=\"text-center\"\n            [isCardFooter]=\"true\"\n            footerClass=\"bg-c-blue border-0\"\n        >\n            <h5 class=\"text-left\">Articles</h5>\n            <span class=\"d-block text-c-blue f-36\">56</span>\n            <p class=\"m-b-0\">Total</p>\n            <ngb-progressbar type=\"primary\" [value]=\"56\"></ngb-progressbar>\n            <div class=\"app-card-footer\">\n                <h6 class=\"text-white m-b-0\">Draft: 22</h6>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-lg-3\">\n        <app-card\n            [hidHeader]=\"true\"\n            cardClass=\"statustic-card\"\n            blockClass=\"text-center\"\n            [isCardFooter]=\"true\"\n            footerClass=\"bg-c-green border-0\"\n        >\n            <h5 class=\"text-left\">Categories</h5>\n            <span class=\"d-block text-c-green f-36\">14</span>\n            <p class=\"m-b-0\">Total</p>\n            <ngb-progressbar type=\"success\" [value]=\"56\"></ngb-progressbar>\n            <div class=\"app-card-footer\">\n                <h6 class=\"text-white m-b-0\">Used: 14</h6>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-lg-3\">\n        <app-card\n            [hidHeader]=\"true\"\n            cardClass=\"statustic-card\"\n            blockClass=\"text-center\"\n            [isCardFooter]=\"true\"\n            footerClass=\"bg-c-red border-0\"\n        >\n            <h5 class=\"text-left\">Tickets</h5>\n            <span class=\"d-block text-c-red f-36\">85</span>\n            <p class=\"m-b-0\">Total</p>\n            <ngb-progressbar type=\"danger\" [value]=\"85\"></ngb-progressbar>\n            <div class=\"app-card-footer\">\n                <h6 class=\"text-white m-b-0\">Closed Today: 85</h6>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-lg-3\">\n        <app-card\n            [hidHeader]=\"true\"\n            cardClass=\"statustic-card\"\n            blockClass=\"text-center\"\n            [isCardFooter]=\"true\"\n            footerClass=\"bg-c-yellow border-0\"\n        >\n            <h5 class=\"text-left\">Forums</h5>\n            <span class=\"d-block text-c-yellow f-36\">42</span>\n            <p class=\"m-b-0\">Total</p>\n            <ngb-progressbar type=\"warning\" [value]=\"85\"></ngb-progressbar>\n            <div class=\"app-card-footer\">\n                <h6 class=\"text-white m-b-0\">Unanswered: 42</h6>\n            </div>\n        </app-card>\n    </div>\n    <!-- statistic end -->\n\n    <!-- customer project start -->\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row align-items-center m-l-0\">\n                <div class=\"col-auto\">\n                    <i class=\"icon feather icon-book f-30 text-c-purple\"></i>\n                </div>\n                <div class=\"col-auto\">\n                    <h6 class=\"text-muted m-b-10\">Tickets Answered</h6>\n                    <h2 class=\"m-b-0\">379</h2>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row align-items-center m-l-0\">\n                <div class=\"col-auto\">\n                    <i class=\"icon feather icon-navigation-2 f-30 text-c-green\"></i>\n                </div>\n                <div class=\"col-auto\">\n                    <h6 class=\"text-muted m-b-10\">Projects Launched</h6>\n                    <h2 class=\"m-b-0\">205</h2>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row align-items-center m-l-0\">\n                <div class=\"col-auto\">\n                    <i class=\"icon feather icon-users f-30 text-c-red\"></i>\n                </div>\n                <div class=\"col-auto\">\n                    <h6 class=\"text-muted m-b-10\">Happy Customers</h6>\n                    <h2 class=\"m-b-0\">5984</h2>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row align-items-center m-l-0\">\n                <div class=\"col-auto\">\n                    <i class=\"icon feather icon-award f-30 text-c-blue\"></i>\n                </div>\n                <div class=\"col-auto\">\n                    <h6 class=\"text-muted m-b-10\">Unique Innovation</h6>\n                    <h2 class=\"m-b-0\">325</h2>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <!-- customer project end -->\n\n    <!-- social download start -->\n    <div class=\"col-xl-4 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-card bg-c-red\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-auto\">\n                    <i class=\"feather icon-mail f-34 text-c-red social-icon\"></i>\n                </div>\n                <div class=\"col\">\n                    <h6 class=\"m-b-0 text-white\">Mail</h6>\n                    <p>231.2w downloads</p>\n                    <p class=\"m-b-0\">Lorem Ipsum is simply dummy text of the printing</p>\n                </div>\n            </div>\n            <a href=\"javascript:\" class=\"download-icon\" [style.top]=\"0\"><i class=\"feather icon-arrow-down\"></i></a>\n        </app-card>\n    </div>\n    <div class=\"col-xl-4 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-card bg-c-blue\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-auto\">\n                    <i class=\"feather icon-twitter f-34 text-c-blue social-icon\"></i>\n                </div>\n                <div class=\"col\">\n                    <h6 class=\"m-b-0 text-white\">Twitter</h6>\n                    <p>231.2w downloads</p>\n                    <p class=\"m-b-0\">Lorem Ipsum is simply dummy text of the printing</p>\n                </div>\n            </div>\n            <a href=\"javascript:\" class=\"download-icon\" [style.top]=\"0\"><i class=\"feather icon-arrow-down\"></i></a>\n        </app-card>\n    </div>\n    <div class=\"col-xl-4 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-card bg-c-green\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-auto\">\n                    <i class=\"feather icon-instagram f-34 text-c-green social-icon\"></i>\n                </div>\n                <div class=\"col\">\n                    <h6 class=\"m-b-0 text-white\">Instagram</h6>\n                    <p>231.2w downloads</p>\n                    <p class=\"m-b-0\">Lorem Ipsum is simply dummy text of the printing</p>\n                </div>\n            </div>\n            <a href=\"javascript:\" class=\"download-icon\" [style.top]=\"0\"><i class=\"feather icon-arrow-down\"></i></a>\n        </app-card>\n    </div>\n    <!-- social download end -->\n\n    <!-- order-visitor start -->\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"text-center order-visitor-card\">\n            <h6 class=\"m-b-0\">Total Subscription</h6>\n            <h4 class=\"m-t-15 m-b-15\"><i class=\"icon feather icon-arrow-down m-r-15 text-c-red\"></i>7652</h4>\n            <p class=\"m-b-0\">48% From Last 24 Hours</p>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"text-center order-visitor-card\">\n            <h6 class=\"m-b-0\">Order Status</h6>\n            <h4 class=\"m-t-15 m-b-15\"><i class=\"icon feather icon-arrow-up m-r-15 text-c-green\"></i>6325</h4>\n            <p class=\"m-b-0\">36% From Last 6 Months</p>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"text-center order-visitor-card\">\n            <h6 class=\"m-b-0\">Unique Visitors</h6>\n            <h4 class=\"m-t-15 m-b-15\"><i class=\"icon feather icon-arrow-down m-r-15 text-c-red\"></i>652</h4>\n            <p class=\"m-b-0\">36% From Last 6 Months</p>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"text-center order-visitor-card\">\n            <h6 class=\"m-b-0\">Monthly Earnings</h6>\n            <h4 class=\"m-t-15 m-b-15\"><i class=\"icon feather icon-arrow-up m-r-15 text-c-green\"></i>5963</h4>\n            <p class=\"m-b-0\">36% From Last 6 Months</p>\n        </app-card>\n    </div>\n    <!-- order-visitor end -->\n\n    <!-- visitors start -->\n    <div class=\"col-sm-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"bg-c-red text-white widget-visitor-card\" blockClass=\"text-center\">\n            <h2 class=\"text-white\">1,658</h2>\n            <h6 class=\"text-white\">Daily user</h6>\n            <i class=\"feather icon-user\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-sm-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"bg-c-blue text-white widget-visitor-card\" blockClass=\"text-center\">\n            <h2 class=\"text-white\">5,678</h2>\n            <h6 class=\"text-white\">Daily visitor</h6>\n            <i class=\"feather icon-file-text\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-sm-4\">\n        <app-card [hidHeader]=\"true\" cardClass=\"bg-c-yellow text-white widget-visitor-card\" blockClass=\"text-center\">\n            <h2 class=\"text-white\">5,678</h2>\n            <h6 class=\"text-white\">Last month visitor</h6>\n            <i class=\"feather icon-award\"></i>\n        </app-card>\n    </div>\n    <!-- visitors end -->\n\n    <!-- project start -->\n    <div class=\"col-md-12 col-xl-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"app-design\">\n            <button class=\"btn btn-primary float-right\">Completed</button>\n            <h6 class=\"f-w-400 text-muted\">App Design And Development</h6>\n            <p class=\"text-c-blue f-w-400\">Android</p>\n            <p class=\"text-muted\">\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's.\n            </p>\n            <div class=\"design-description d-inline-block m-r-40\">\n                <h3 class=\"f-w-400\">678</h3>\n                <p class=\"text-muted\">Question</p>\n            </div>\n            <div class=\"design-description d-inline-block\">\n                <h3 class=\"f-w-400\">1,452</h3>\n                <p class=\"text-muted\">Comments</p>\n            </div>\n            <div class=\"team-box p-b-20\">\n                <p class=\"d-inline-block m-r-20 f-w-400\">Team</p>\n                <div class=\"team-section d-inline-block\">\n                    <a href=\"javascript:\"\n                        ><img src=\"assets/images/user/avatar-2.jpg \" data-toggle=\"tooltip\" title=\"Josephin Doe\" alt=\" \"\n                    /></a>\n                    <a href=\"javascript:\"\n                        ><img src=\"assets/images/user/avatar-3.jpg \" data-toggle=\"tooltip\" title=\"Lary Doe\" alt=\" \" class=\"m-l-5\"\n                    /></a>\n                    <a href=\"javascript:\"\n                        ><img src=\"assets/images/user/avatar-4.jpg \" data-toggle=\"tooltip\" title=\"Alia\" alt=\" \" class=\"m-l-5\"\n                    /></a>\n                    <a href=\"javascript:\"\n                        ><img src=\"assets/images/user/avatar-2.jpg \" data-toggle=\"tooltip\" title=\"Suzen\" alt=\" \" class=\"m-l-5\"\n                    /></a>\n                </div>\n            </div>\n            <div class=\"progress-box\">\n                <ngb-progressbar type=\"primary\" [value]=\"78\"></ngb-progressbar>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-md-12 col-xl-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"app-design\">\n            <button class=\"btn btn-success float-right\">Pending</button>\n            <h6 class=\"f-w-400 text-muted\">Landing Page Design</h6>\n            <p class=\"text-c-green f-w-400\">Webdesign</p>\n            <p class=\"text-muted\">\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's.\n            </p>\n            <div class=\"design-description d-inline-block m-r-40\">\n                <h3 class=\"f-w-400\">271</h3>\n                <p class=\"text-muted\">Question</p>\n            </div>\n            <div class=\"design-description d-inline-block\">\n                <h3 class=\"f-w-400\">816</h3>\n                <p class=\"text-muted\">Comments</p>\n            </div>\n            <div class=\"team-box p-b-20\">\n                <p class=\"d-inline-block m-r-20 f-w-400\">Team</p>\n                <div class=\"team-section d-inline-block\">\n                    <div class=\"team-section d-inline-block\">\n                        <a href=\"javascript:\"\n                            ><img src=\"assets/images/user/avatar-3.jpg \" data-toggle=\"tooltip\" title=\"Lary Doe\" alt=\" \" class=\"m-l-5\"\n                        /></a>\n                        <a href=\"javascript:\"\n                            ><img src=\"assets/images/user/avatar-4.jpg \" data-toggle=\"tooltip\" title=\"Alia\" alt=\" \" class=\"m-l-5\"\n                        /></a>\n                        <a href=\"javascript:\"\n                            ><img src=\"assets/images/user/avatar-2.jpg \" data-toggle=\"tooltip\" title=\"Josephin Doe\" alt=\" \"\n                        /></a>\n                        <a href=\"javascript:\"\n                            ><img src=\"assets/images/user/avatar-3.jpg \" data-toggle=\"tooltip\" title=\"Suzen\" alt=\" \" class=\"m-l-5\"\n                        /></a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"progress-box\">\n                <ngb-progressbar type=\"success\" [value]=\"78\"></ngb-progressbar>\n            </div>\n        </app-card>\n    </div>\n    <!-- project end -->\n\n    <!-- user start -->\n    <div class=\"col-xl-6 col-md-12\">\n        <app-card [hidHeader]=\"true\" cardClass=\"user-card-full\" blockClass=\"p-0\">\n            <div class=\"row m-l-0 m-r-0\">\n                <div class=\"col-sm-4 bg-c-blue user-profile-side\">\n                    <div class=\"p-20 text-center text-white\">\n                        <div class=\"m-b-25\">\n                            <img src=\"assets/images/user/avatar-4.jpg\" class=\"img-radius\" alt=\"User-Profile-Image\" />\n                        </div>\n                        <h6 class=\"f-w-600 text-white\">Jeny William</h6>\n                        <p>Web Designer</p>\n                        <a href=\"javascript:\" class=\"text-white\"><i class=\"feather icon-edit m-t-10 f-16\"></i></a>\n                    </div>\n                </div>\n                <div class=\"col-sm-8\">\n                    <div class=\"p-20\">\n                        <h6 class=\"m-b-20 p-b-5 b-b-default f-w-600\">Information</h6>\n                        <div class=\"row\">\n                            <div class=\"col-sm-6\">\n                                <p class=\"m-b-10 f-w-600\">Email</p>\n                                <h6 class=\"text-muted f-w-400\">\n                                    <a href=\"mailto:someone@example.com?Subject=Hello%20again\" target=\"_top\">jeny@gmail.com</a>\n                                </h6>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <p class=\"m-b-10 f-w-600\">Phone</p>\n                                <h6 class=\"text-muted f-w-400\">0023-333-526136</h6>\n                            </div>\n                        </div>\n                        <h6 class=\"m-b-20 m-t-50 p-b-5 b-b-default f-w-600\">Projects</h6>\n                        <div class=\"row\">\n                            <div class=\"col-sm-6\">\n                                <p class=\"m-b-10 f-w-600\">Recent</p>\n                                <h6 class=\"text-muted f-w-400\">Guruable Admin</h6>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <p class=\"m-b-10 f-w-600\">Most Viewed</p>\n                                <h6 class=\"text-muted f-w-400\">Able Pro Admin</h6>\n                            </div>\n                        </div>\n                        <ul class=\"social-link list-unstyled m-t-50 m-b-20\">\n                            <li>\n                                <a href=\"javascript:\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"facebook\"\n                                    ><i class=\"feather icon-facebook facebook\" aria-hidden=\"true\"></i\n                                ></a>\n                            </li>\n                            <li>\n                                <a href=\"javascript:\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"twitter\"\n                                    ><i class=\"feather icon-twitter twitter\" aria-hidden=\"true\"></i\n                                ></a>\n                            </li>\n                            <li>\n                                <a href=\"javascript:\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\" data-original-title=\"instagram\"\n                                    ><i class=\"feather icon-instagram instagram\" aria-hidden=\"true\"></i\n                                ></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"user-card2 overflow-hidden\" blockClass=\"text-center p-0\">\n            <div class=\"p-20 p-b-0\">\n                <h6 class=\"m-b-15\">Project Risk</h6>\n                <div class=\"risk-rate\">\n                    <span><b>5</b></span>\n                </div>\n                <h6 class=\"m-b-20 m-t-15\">Balanced</h6>\n                <a href=\"javascript:\" class=\"text-c-green b-b-success\">Change Your Risk</a>\n                <div class=\"row justify-content-center m-t-10 b-t-default m-l-0 m-r-0\">\n                    <div class=\"col m-t-15 b-r-default\">\n                        <h6 class=\"text-muted\">Nr</h6>\n                        <h6>AWS 2455</h6>\n                    </div>\n                    <div class=\"col m-t-15\">\n                        <h6 class=\"text-muted\">Created</h6>\n                        <h6>30th Sep</h6>\n                    </div>\n                </div>\n            </div>\n            <button class=\"btn btn-success btn-block\">Download Overall Report</button>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"quater-card\">\n            <h6 class=\"text-muted m-b-15\">This Quarter</h6>\n            <h4>$3,9452.50</h4>\n            <p class=\"text-muted\">$3,9452.50</p>\n            <h5 class=\"m-t-20 mb-1\">87</h5>\n            <p class=\"text-muted mb-2\">Online Revenue<span class=\"float-right\">80%</span></p>\n            <ngb-progressbar [value]=\"80\" [height]=\"10\"></ngb-progressbar>\n            <h5 class=\"m-t-20 mb-1\">68</h5>\n            <p class=\"text-muted mb-2\">Offline Revenue<span class=\"float-right\">50%</span></p>\n            <ngb-progressbar type=\"success\" [value]=\"50\" [height]=\"10\"></ngb-progressbar>\n            <h5 class=\"m-t-20 mb-1\">68</h5>\n            <p class=\"text-muted mb-2\">Dealer Revenue<span class=\"float-right\">30%</span></p>\n            <ngb-progressbar type=\"danger\" [value]=\"30\" [height]=\"10\"></ngb-progressbar>\n        </app-card>\n    </div>\n    <!-- user end -->\n\n    <!-- statistic with progressbar start -->\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"statustic-progress-card\">\n            <h5 class=\"mb-3\">Open Ticket</h5>\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <label class=\"badge badge-light-success\">35% <i class=\"m-l-10 feather icon-arrow-up\"></i></label>\n                </div>\n                <div class=\"col text-right\">\n                    <h5 class=\"\">35</h5>\n                </div>\n            </div>\n            <div class=\"m-t-5\">\n                <ngb-progressbar type=\"success\" [value]=\"35\" [height]=\"10\"></ngb-progressbar>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"statustic-progress-card\">\n            <h5 class=\"mb-3\">Open Ticket</h5>\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <label class=\"badge badge-light-primary\">35% <i class=\"m-l-10 feather icon-arrow-up\"></i></label>\n                </div>\n                <div class=\"col text-right\">\n                    <h5 class=\"\">28</h5>\n                </div>\n            </div>\n            <div class=\"m-t-5\">\n                <ngb-progressbar type=\"primary\" [value]=\"28\" [height]=\"10\"></ngb-progressbar>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"statustic-progress-card\">\n            <h5 class=\"mb-3\">Open Ticket</h5>\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <label class=\"badge badge-light-danger\">35% <i class=\"m-l-10 feather icon-arrow-up\"></i></label>\n                </div>\n                <div class=\"col text-right\">\n                    <h5 class=\"\">87</h5>\n                </div>\n            </div>\n            <div class=\"m-t-5\">\n                <ngb-progressbar type=\"danger\" [value]=\"87\" [height]=\"10\"></ngb-progressbar>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"statustic-progress-card\">\n            <h5 class=\"mb-3\">Open Ticket</h5>\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <label class=\"badge badge-light-warning\">35% <i class=\"m-l-10 feather icon-arrow-up\"></i></label>\n                </div>\n                <div class=\"col text-right\">\n                    <h5 class=\"\">32</h5>\n                </div>\n            </div>\n            <div class=\"m-t-5\">\n                <ngb-progressbar type=\"warning\" [value]=\"32\" [height]=\"10\"></ngb-progressbar>\n            </div>\n        </app-card>\n    </div>\n    <!-- statistic with progressbar end -->\n\n    <!-- live line section start -->\n    <div class=\"col-sm-12\">\n        <owl-carousel-o [options]=\"customOptions\">\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-ethereum text-c-red f-22 m-r-5\"></i>Ethereum(ETH)</span\n                    >\n                    <h6 class=\"badge badge-light-danger float-right d-inline-block m-0\">+1.5278</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-bitcoin text-c-yellow f-22 m-r-5\"></i>Bitcoin(BTC)</span\n                    >\n                    <h6 class=\"badge badge-light-warning float-right d-inline-block m-0\">-0.997896</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-cloudsmith text-c-blue f-22 m-r-5\"></i>Ripple(RPL)</span\n                    >\n                    <h6 class=\"badge badge-light-primary float-rightd-inline-block m-0\">-7.66789</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-asymmetrik text-c-yellow f-22 m-r-5\"></i>Neo(NEO)</span\n                    >\n                    <h6 class=\"badge badge-light-warning float-right d-inline-block m-0\">+5.78789</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-ethereum text-c-red f-22 m-r-5\"></i>Ethereum(ETH)</span\n                    >\n                    <h6 class=\"badge badge-light-danger float-right d-inline-block m-0\">-7.6648</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-bitcoin text-c-yellow f-22 m-r-5\"></i>Bitcoin(BTC)</span\n                    >\n                    <h6 class=\"badge badge-light-warning float-right d-inline-block m-0\">+5.1024</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-cloudsmith text-c-blue f-22 m-r-5\"></i>Ripple(RPL)</span\n                    >\n                    <h6 class=\"badge badge-light-primary float-right d-inline-block m-0\">+4.5896</h6>\n                </app-card>\n            </ng-template>\n            <ng-template carouselSlide>\n                <app-card\n                    [hidHeader]=\"true\"\n                    cardClass=\"bg-dark rounded-0 shadow-none\"\n                    blockClass=\"d-flex justify-content-between align-items-center\"\n                >\n                    <span class=\"text-white d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-asymmetrik text-c-yellow f-22 m-r-5\"></i>Neo(NEO)</span\n                    >\n                    <h6 class=\"badge badge-light-warning float-right d-inline-block m-0\">+1.4563</h6>\n                </app-card>\n            </ng-template>\n        </owl-carousel-o>\n    </div>\n    <!-- live line section end -->\n\n    <!-- live line section start -->\n    <div class=\"col-sm-12\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-4 col-xl-2\">\n                <app-card [hidHeader]=\"true\">\n                    <span>REALTY</span>\n                    <h6 class=\"float-right text-c-red d-inline-block m-0\">-0.99</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-4 col-xl-2\">\n                <app-card [hidHeader]=\"true\">\n                    <span>TELCOM</span>\n                    <h6 class=\"float-right text-c-green d-inline-block m-0\">+1.52</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-4 col-xl-2\">\n                <app-card [hidHeader]=\"true\">\n                    <span>CPSE</span>\n                    <h6 class=\"float-right text-c-green d-inline-block m-0\">+5.78</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-4 col-xl-2\">\n                <app-card [hidHeader]=\"true\">\n                    <span>INFRA</span>\n                    <h6 class=\"float-right text-c-red d-inline-block m-0\">-7.66</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-4 col-xl-2\">\n                <app-card [hidHeader]=\"true\">\n                    <span>TECK</span>\n                    <h6 class=\"float-right text-c-green d-inline-block m-0\">+4.56</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-4 col-xl-2\">\n                <app-card [hidHeader]=\"true\">\n                    <span>BASMTR</span>\n                    <h6 class=\"float-right text-c-green d-inline-block m-0\">+0.78</h6>\n                </app-card>\n            </div>\n        </div>\n    </div>\n    <!-- live line section end -->\n\n    <!-- live line section start -->\n    <div class=\"col-sm-12 stastic-slider-full-card\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-6 col-xl-3\">\n                <app-card [hidHeader]=\"true\" cardClass=\"rounded-0\" blockClass=\"d-flex justify-content-between align-items-center\">\n                    <span class=\"d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-bitcoin text-c-yellow f-22 m-r-5\"></i>Bitcoin(BTC)</span\n                    >\n                    <h6 class=\"badge badge-light-warning float-right d-inline-block m-0\">-0.997896</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-6 col-xl-3\">\n                <app-card [hidHeader]=\"true\" cardClass=\"rounded-0\" blockClass=\"d-flex justify-content-between align-items-center\">\n                    <span class=\"d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-ethereum text-c-red f-22 m-r-5\"></i>Ethereum(ETH)</span\n                    >\n                    <h6 class=\"badge badge-light-danger float-right d-inline-block m-0\">+1.1456</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-6 col-xl-3\">\n                <app-card [hidHeader]=\"true\" cardClass=\"rounded-0\" blockClass=\"d-flex justify-content-between align-items-center\">\n                    <span class=\"d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-asymmetrik text-c-yellow f-22 m-r-5\"></i>Neo(NEO)</span\n                    >\n                    <h6 class=\"badge badge-light-warning float-right d-inline-block m-0\">+5.78787</h6>\n                </app-card>\n            </div>\n            <div class=\"col-md-6 col-xl-3\">\n                <app-card [hidHeader]=\"true\" cardClass=\"rounded-0\" blockClass=\"d-flex justify-content-between align-items-center\">\n                    <span class=\"d-flex justify-content-center align-items-center\"\n                        ><i class=\"fab fa-cloudsmith text-c-green f-22 m-r-5\"></i>Ripple(RPL)</span\n                    >\n                    <h6 class=\"badge badge-light-success float-rightd-inline-block m-0\">-7.99999</h6>\n                </app-card>\n            </div>\n        </div>\n    </div>\n    <!-- live line section end -->\n\n    <!-- live view start -->\n    <div class=\"col-xl-4 col-md-6\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row\">\n                <div class=\"col-auto\">\n                    <h6>Devices</h6>\n                </div>\n                <div class=\"col text-right\">\n                    <h2 class=\"mb-0\">1042</h2>\n                </div>\n            </div>\n            <div class=\"row mt-4\">\n                <div class=\"col\">\n                    <h3 class=\"m-0\"><i class=\"fas fa-circle text-success f-10 m-r-5\"></i>66%</h3>\n                    <span class=\"ml-3\">Desktop</span>\n                </div>\n                <div class=\"col\">\n                    <h3 class=\"m-0\"><i class=\"fas fa-circle text-primary f-10 m-r-5\"></i>26%</h3>\n                    <span class=\"ml-3\">Tablet</span>\n                </div>\n                <div class=\"col\">\n                    <h3 class=\"m-0\"><i class=\"fas fa-circle text-danger f-10 m-r-5\"></i>8%</h3>\n                    <span class=\"ml-3\">Mobile</span>\n                </div>\n            </div>\n            <div class=\"progressbar-stack mt-4\">\n                <div *ngFor=\"let bar of deviceProgressBar\" [ngStyle]=\"{ width: bar.value + '%' }\" class=\"float-left\">\n                    <ngb-progressbar [type]=\"bar.type\" height=\"8px\" [value]=\"100\"></ngb-progressbar>\n                </div>\n            </div>\n        </app-card>\n        <app-card [hidHeader]=\"true\">\n            <h6 class=\"mb-1\">New York , NY</h6>\n            <span class=\"d-block mb-2\">Monday 2:00 PM</span>\n            <div class=\"row align-items-center justify-content-center\">\n                <div class=\"col-auto\">\n                    <h2 class=\"text-c-purple m-0\"><i class=\"feather icon-cloud-snow text-muted mr-2\"></i>23<sup class=\"f-20\">°</sup></h2>\n                </div>\n                <div class=\"col text-right\">\n                    <div class=\"form-group mb-1\">\n                        <label class=\"m-r-5 f-20 mb-0\">°C</label>\n                        <div class=\"switch switch-primary d-inline\">\n                            <input type=\"checkbox\" id=\"switch-a-1\" checked=\"\" />\n                            <label for=\"switch-a-1\" class=\"cr\"></label>\n                        </div>\n                        <label class=\"m-l-5 f-20 mb-0\">°F</label>\n                    </div>\n                    <span class=\"d-block mt-1\">Partly Cloudy</span>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <!-- live view end -->\n\n    <!-- active user start -->\n    <div class=\"col-xl-4 col-md-6\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row align-items-start\">\n                <div class=\"col\">\n                    <h2 class=\"mb-0\">954</h2>\n                </div>\n                <div class=\"col-auto text-right\">\n                    <h6 class=\"\">Location</h6>\n                </div>\n            </div>\n            <div class=\"row mt-2\">\n                <div class=\"col-sm-6\">\n                    <span class=\"d-block\"><i class=\"fas fa-circle text-c-green f-10 m-r-10\"></i>India</span>\n                    <span class=\"d-block\"><i class=\"fas fa-circle text-c-red f-10 m-r-10\"></i>France</span>\n                    <span class=\"d-block\"><i class=\"fas fa-circle text-c-blue f-10 m-r-10\"></i>Other</span>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"d-block\"><i class=\"fas fa-circle text-c-yellow f-10 m-r-10\"></i>United states</span>\n                    <span class=\"d-block\"><i class=\"fas fa-circle text-c-purple f-10 m-r-10\"></i>United Kingdom</span>\n                </div>\n            </div>\n\n            <div class=\"progress mt-3\" style=\"height: 20px\">\n                <div\n                    class=\"progress-bar badge-light-success rounded\"\n                    role=\"progressbar\"\n                    style=\"width: 30%\"\n                    aria-valuenow=\"30\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                >\n                    24%\n                </div>\n                <div\n                    class=\"progress-bar badge-light-danger rounded\"\n                    role=\"progressbar\"\n                    style=\"width: 25%\"\n                    aria-valuenow=\"25\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                >\n                    12%\n                </div>\n                <div\n                    class=\"progress-bar badge-light-primary rounded\"\n                    role=\"progressbar\"\n                    style=\"width: 20%\"\n                    aria-valuenow=\"20\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                >\n                    10%\n                </div>\n                <div\n                    class=\"progress-bar badge-light-warning rounded\"\n                    role=\"progressbar\"\n                    style=\"width: 15%\"\n                    aria-valuenow=\"15\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                >\n                    8%\n                </div>\n                <div\n                    class=\"progress-bar badge-light-info rounded\"\n                    role=\"progressbar\"\n                    style=\"width: 25%\"\n                    aria-valuenow=\"25\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                >\n                    35%\n                </div>\n            </div>\n        </app-card>\n        <app-card cardTitle=\"Overdue tasks\" [options]=\"false\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <h2 class=\"m-0\"><i class=\"feather icon-arrow-up text-c-green\"></i>4</h2>\n                </div>\n                <div class=\"col text-right\">\n                    <h5 class=\"text-c-green m-0\">15%</h5>\n                    <span class=\"d-block\">Last Month:6</span>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <!-- active user end -->\n\n    <!-- revenue-section start -->\n    <div class=\"col-xl-4 col-md-12\">\n        <app-card [hidHeader]=\"true\">\n            <div class=\"row\">\n                <div class=\"col-auto\">\n                    <span>Revenue</span>\n                </div>\n                <div class=\"col text-right\">\n                    <div class=\"btn-group\" ngbDropdown placement=\"auto\">\n                        <button\n                            class=\"btn waves-effect waves-light btn-sm btn-outline-secondary dropdown-toggle\"\n                            ngbDropdownToggle\n                            type=\"button\"\n                            data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\"\n                            aria-expanded=\"false\"\n                        >\n                            This Year\n                        </button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <a class=\"dropdown-item\" href=\"javascript:\">1 Week</a>\n                            <a class=\"dropdown-item\" href=\"javascript:\">2 Month</a>\n                            <a class=\"dropdown-item\" href=\"javascript:\">4 Year</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mt-4\">\n                <ngb-progressbar type=\"primary\" [showValue]=\"true\" height=\"10px\" [value]=\"60\"></ngb-progressbar>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-auto\">\n                    <span class=\"text-uppercase mt-2 d-block\">Earning</span>\n                    <h5 class=\"mb-0\">$6.455</h5>\n                </div>\n                <div class=\"col text-right\">\n                    <span class=\"text-uppercase mt-2 d-block\">Expense</span>\n                    <h5 class=\"mb-0\">$3.869</h5>\n                </div>\n            </div>\n            <hr />\n            <div class=\"row\">\n                <div class=\"col-auto\">\n                    <span class=\"text-uppercase d-block\">budget</span>\n                </div>\n                <div class=\"col text-right\">\n                    <span class=\"text-uppercase d-block\">Earning</span>\n                    <h5 class=\"mb-0\">$5,569 of $1,000</h5>\n                </div>\n            </div>\n            <div class=\"mt-2\">\n                <ngb-progressbar type=\"success\" [showValue]=\"true\" height=\"10px\" [value]=\"40\"></ngb-progressbar>\n            </div>\n        </app-card>\n        <app-card [hidHeader]=\"true\" blockClass=\"p-0\">\n            <div class=\"row d-flex align-items-center m-0\">\n                <div class=\"col-6 text-center\">\n                    <div style=\"padding: 20px 25px\">\n                        <h2 class=\"text-c-purple mb-0\">19<sup class=\"f-20\">°</sup></h2>\n                        <span>Sunny</span>\n                    </div>\n                </div>\n                <div class=\"col-6 text-center bg-primary p-0\">\n                    <div style=\"padding: 20px 25px\">\n                        <i class=\"feather icon-sun f-36 text-white\"></i>\n                        <h6 class=\"mt-2 mb-0 text-white f-w-400\">New York , NY</h6>\n                    </div>\n                </div>\n            </div>\n        </app-card>\n    </div>\n    <!-- revenue-section end -->\n\n    <!-- social section start -->\n    <div class=\"col-md-6 col-xl-3\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-widget-card\" blockClass=\"bg-facebook\">\n            <h3 class=\"text-white m-0\">1165 +</h3>\n            <span class=\"m-t-10\">Facebook Users</span>\n            <i class=\"fab fa-facebook\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-3\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-widget-card\" blockClass=\"bg-twitter\">\n            <h3 class=\"text-white m-0\">780 +</h3>\n            <span class=\"m-t-10\">Twitter Users</span>\n            <i class=\"fab fa-twitter\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-3\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-widget-card\" blockClass=\"bg-linkedin\">\n            <h3 class=\"text-white m-0\">998 +</h3>\n            <span class=\"m-t-10\">Linked In Users</span>\n            <i class=\"fab fa-linkedin-in\"></i>\n        </app-card>\n    </div>\n    <div class=\"col-md-6 col-xl-3\">\n        <app-card [hidHeader]=\"true\" cardClass=\"social-widget-card\" blockClass=\"bg-googleplus\">\n            <h3 class=\"text-white m-0\">650 +</h3>\n            <span class=\"m-t-10\">Google Plus Users</span>\n            <i class=\"fab fa-google-plus-g\"></i>\n        </app-card>\n    </div>\n    <!-- social section end -->\n\n    <!-- ticket, project, client start -->\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"ticket-card\">\n            <p class=\"m-b-25 badge-light-danger lbl-card\"><i class=\"fas fa-folder-open m-r-5\"></i> Open Tickets</p>\n            <div class=\"text-center\">\n                <h2 class=\"m-b-0 d-inline-block text-c-red\">128</h2>\n                <p class=\"m-b-0 d-inline-block\">Tickets</p>\n                <p class=\"m-b-0 m-t-10\"><i class=\"fas fa-caret-down m-r-10 f-18 text-c-red\"></i>From Previous Month</p>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"ticket-card\">\n            <p class=\"m-b-25 badge-light-primary lbl-card\"><i class=\"fas fa-file-archive m-r-5\"></i> Close Tickets</p>\n            <div class=\"text-center\">\n                <h2 class=\"m-b-0 d-inline-block text-c-blue\">134</h2>\n                <p class=\"m-b-0 d-inline-block\">Tickets</p>\n                <p class=\"m-b-0 m-t-10\"><i class=\"fas fa-caret-up m-r-10 f-18 text-c-blue\"></i>From Previous Month</p>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"ticket-card\">\n            <p class=\"m-b-25 badge-light-success lbl-card\"><i class=\"fas fa-users m-r-5\"></i> New Clients</p>\n            <div class=\"text-center\">\n                <h2 class=\"m-b-0 d-inline-block text-c-green\">307</h2>\n                <p class=\"m-b-0 d-inline-block\">Clients</p>\n                <p class=\"m-b-0 m-t-10\"><i class=\"fas fa-caret-up m-r-10 f-18 text-c-green\"></i>From Previous Month</p>\n            </div>\n        </app-card>\n    </div>\n    <div class=\"col-xl-3 col-md-6\">\n        <app-card [hidHeader]=\"true\" cardClass=\"ticket-card\">\n            <p class=\"m-b-25 badge-light-warning lbl-card\"><i class=\"fas fa-database m-r-5\"></i> New Orders</p>\n            <div class=\"text-center\">\n                <h2 class=\"m-b-0 d-inline-block text-c-yellow\">231</h2>\n                <p class=\"m-b-0 d-inline-block\">Orders</p>\n                <p class=\"m-b-0 m-t-10\"><i class=\"fas fa-caret-up m-r-10 f-18 text-c-yellow\"></i>From Previous Month</p>\n            </div>\n        </app-card>\n    </div>\n    <!-- ticket, project, client end -->\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WidgetStatisticRoutingModule } from './widget-statistic-routing.module';\nimport { WidgetStatisticComponent } from './widget-statistic.component';\nimport { SharedModule } from '../../../theme/shared/shared.module';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport { NgbDropdownModule, NgbProgressbarModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    declarations: [WidgetStatisticComponent],\n    imports: [CommonModule, WidgetStatisticRoutingModule, SharedModule, CarouselModule, NgbProgressbarModule, NgbDropdownModule]\n})\nexport class WidgetStatisticModule {}\n","import { __decorate, __param } from 'tslib';\nimport { Injectable, isDevMode, ErrorHandler, InjectionToken, PLATFORM_ID, Inject, Optional, TemplateRef, Input, Directive, EventEmitter, ElementRef, ChangeDetectorRef, ContentChildren, Output, HostListener, Component, NgZone, Renderer2, Attribute, HostBinding, NgModule } from '@angular/core';\nimport { isPlatformBrowser, LocationStrategy, CommonModule } from '@angular/common';\nimport { Subject, merge, of, from } from 'rxjs';\nimport { EventManager } from '@angular/platform-browser';\nimport { tap, filter, switchMap, first, take, skip, map, toArray, delay } from 'rxjs/operators';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/router';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = function (a0, a1) { return { \"isMouseDragable\": a0, \"isTouchDragable\": a1 }; };\nfunction CarouselComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelement(1, \"owl-stage\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"owlDraggable\", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx_r1.owlDOMData == null ? null : ctx_r1.owlDOMData.isMouseDragable, ctx_r1.owlDOMData == null ? null : ctx_r1.owlDOMData.isTouchDragable))(\"stageData\", ctx_r1.stageData)(\"slidesData\", ctx_r1.slidesData);\n} }\nconst _c1 = function (a0, a1) { return { \"active\": a0, \"owl-dot-text\": a1 }; };\nfunction CarouselComponent_ng_container_3_div_5_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ng_container_3_div_5_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); const dot_r4 = restoredCtx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.moveByDot(dot_r4.id); });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const dot_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c1, dot_r4.active, dot_r4.showInnerContent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", dot_r4.innerContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c2 = function (a0) { return { \"disabled\": a0 }; };\nfunction CarouselComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ng_container_3_Template_div_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.prev(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ng_container_3_Template_div_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.next(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(5, CarouselComponent_ng_container_3_div_5_Template, 2, 5, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c2, ctx_r2.navData == null ? null : ctx_r2.navData.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c2, ctx_r2.navData == null ? null : ctx_r2.navData.prev == null ? null : ctx_r2.navData.prev.disabled))(\"innerHTML\", ctx_r2.navData == null ? null : ctx_r2.navData.prev == null ? null : ctx_r2.navData.prev.htmlText, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c2, ctx_r2.navData == null ? null : ctx_r2.navData.next == null ? null : ctx_r2.navData.next.disabled))(\"innerHTML\", ctx_r2.navData == null ? null : ctx_r2.navData.next == null ? null : ctx_r2.navData.next.htmlText, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c2, ctx_r2.dotsData == null ? null : ctx_r2.dotsData.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.dotsData == null ? null : ctx_r2.dotsData.dots);\n} }\nconst _c3 = function (a0, a1, a2, a3, a4) { return { \"owl-rtl\": a0, \"owl-loaded\": a1, \"owl-responsive\": a2, \"owl-drag\": a3, \"owl-grab\": a4 }; };\nfunction StageComponent_ng_container_2_2_ng_template_0_Template(rf, ctx) { }\nfunction StageComponent_ng_container_2_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, StageComponent_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 4);\n} if (rf & 2) {\n    const slide_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r1.tplRef);\n} }\nconst _c4 = function (a0, a1, a2, a3) { return { \"width\": a0, \"margin-left\": a1, \"margin-right\": a2, \"left\": a3 }; };\nfunction StageComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"animationend\", function StageComponent_ng_container_2_Template_div_animationend_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const slide_r1 = restoredCtx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.clear(slide_r1.id); });\n    ɵngcc0.ɵɵtemplate(2, StageComponent_ng_container_2_2_Template, 1, 1, null, 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const slide_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", slide_r1.classes)(\"ngStyle\", ɵngcc0.ɵɵpureFunction4(4, _c4, slide_r1.width + \"px\", slide_r1.marginL ? slide_r1.marginL + \"px\" : \"\", slide_r1.marginR ? slide_r1.marginR + \"px\" : \"\", slide_r1.left))(\"@autoHeight\", slide_r1.heightState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", slide_r1.load);\n} }\nconst _c5 = function (a0, a1, a2, a3, a4) { return { \"width\": a0, \"transform\": a1, \"transition\": a2, \"padding-left\": a3, \"padding-right\": a4 }; };\nlet ResizeService = class ResizeService {\r\n    constructor(eventManager) {\r\n        this.eventManager = eventManager;\r\n        this.resizeSubject = new Subject();\r\n        this.eventManager.addGlobalEventListener('window', 'resize', this.onResize.bind(this));\r\n        this.eventManager.addGlobalEventListener('window', 'onload', this.onLoaded.bind(this));\r\n    }\r\n    /**\r\n     * Makes resizeSubject become Observable\r\n     * @returns Observable of resizeSubject\r\n     */\r\n    get onResize$() {\r\n        return this.resizeSubject.asObservable();\r\n    }\r\n    /**\r\n     * Handler of 'resize' event. Passes data throw resizeSubject\r\n     * @param event Event Object of 'resize' event\r\n     */\r\n    onResize(event) {\r\n        this.resizeSubject.next(event.target);\r\n    }\r\n    /**\r\n     * Handler of 'onload' event. Defines the width of window\r\n     * @param event Event Object of 'onload' event\r\n     */\r\n    onLoaded(event) {\r\n        this.windowWidth = event.target;\r\n    }\r\n};\nResizeService.ɵfac = function ResizeService_Factory(t) { return new (t || ResizeService)(ɵngcc0.ɵɵinject(ɵngcc1.EventManager)); };\nResizeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ResizeService, factory: function (t) { return ResizeService.ɵfac(t); } });\r\nResizeService.ctorParameters = () => [\r\n    { type: EventManager }\r\n];\n\n/**\r\n * Defaults value of options\r\n */\r\nclass OwlCarouselOConfig {\r\n    constructor() {\r\n        this.items = 3;\r\n        this.skip_validateItems = false;\r\n        this.loop = false;\r\n        this.center = false;\r\n        this.rewind = false;\r\n        this.mouseDrag = true;\r\n        this.touchDrag = true;\r\n        this.pullDrag = true;\r\n        this.freeDrag = false;\r\n        this.margin = 0;\r\n        this.stagePadding = 0;\r\n        this.merge = false;\r\n        this.mergeFit = true;\r\n        this.autoWidth = false;\r\n        this.startPosition = 0;\r\n        this.rtl = false;\r\n        this.smartSpeed = 250;\r\n        this.fluidSpeed = false;\r\n        this.dragEndSpeed = false;\r\n        this.responsive = {};\r\n        this.responsiveRefreshRate = 200;\r\n        // defaults to Navigation\r\n        this.nav = false;\r\n        this.navText = ['prev', 'next'];\r\n        this.navSpeed = false;\r\n        this.slideBy = 1; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\r\n        this.dots = true;\r\n        this.dotsEach = false;\r\n        this.dotsData = false;\r\n        this.dotsSpeed = false;\r\n        // defaults to Autoplay\r\n        this.autoplay = false;\r\n        this.autoplayTimeout = 5000;\r\n        this.autoplayHoverPause = false;\r\n        this.autoplaySpeed = false;\r\n        this.autoplayMouseleaveTimeout = 1;\r\n        // defaults to LazyLoading\r\n        this.lazyLoad = false;\r\n        this.lazyLoadEager = 0;\r\n        // defaults to Animate\r\n        this.slideTransition = '';\r\n        this.animateOut = false;\r\n        this.animateIn = false;\r\n        // defaults to AutoHeight\r\n        this.autoHeight = false;\r\n        // defaults to Hash\r\n        this.URLhashListener = false;\r\n    }\r\n}\r\n/**\r\n * we can't read types from OwlOptions in javascript because of props have undefined value and types of those props are used for validating inputs\r\n * class below is copy of OwlOptions but its all props have string value showing certain type;\r\n * this is class is being used just in method _validateOptions() of CarouselService;\r\n */\r\nclass OwlOptionsMockedTypes {\r\n    constructor() {\r\n        this.items = 'number';\r\n        this.skip_validateItems = 'boolean';\r\n        this.loop = 'boolean';\r\n        this.center = 'boolean';\r\n        this.rewind = 'boolean';\r\n        this.mouseDrag = 'boolean';\r\n        this.touchDrag = 'boolean';\r\n        this.pullDrag = 'boolean';\r\n        this.freeDrag = 'boolean';\r\n        this.margin = 'number';\r\n        this.stagePadding = 'number';\r\n        this.merge = 'boolean';\r\n        this.mergeFit = 'boolean';\r\n        this.autoWidth = 'boolean';\r\n        this.startPosition = 'number|string';\r\n        this.rtl = 'boolean';\r\n        this.smartSpeed = 'number';\r\n        this.fluidSpeed = 'boolean';\r\n        this.dragEndSpeed = 'number|boolean';\r\n        this.responsive = {};\r\n        this.responsiveRefreshRate = 'number';\r\n        // defaults to Navigation\r\n        this.nav = 'boolean';\r\n        this.navText = 'string[]';\r\n        this.navSpeed = 'number|boolean';\r\n        this.slideBy = 'number|string'; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\r\n        this.dots = 'boolean';\r\n        this.dotsEach = 'number|boolean';\r\n        this.dotsData = 'boolean';\r\n        this.dotsSpeed = 'number|boolean';\r\n        // defaults to Autoplay\r\n        this.autoplay = 'boolean';\r\n        this.autoplayTimeout = 'number';\r\n        this.autoplayHoverPause = 'boolean';\r\n        this.autoplaySpeed = 'number|boolean';\r\n        this.autoplayMouseleaveTimeout = 'number';\r\n        // defaults to LazyLoading\r\n        this.lazyLoad = 'boolean';\r\n        this.lazyLoadEager = 'number';\r\n        // defaults to Animate\r\n        this.slideTransition = 'string';\r\n        this.animateOut = 'string|boolean';\r\n        this.animateIn = 'string|boolean';\r\n        // defaults to AutoHeight\r\n        this.autoHeight = 'boolean';\r\n        // defaults to Hash\r\n        this.URLhashListener = \"boolean\";\r\n    }\r\n}\n\nlet OwlLogger = class OwlLogger {\r\n    constructor(errorHandler) {\r\n        this.errorHandler = errorHandler;\r\n    }\r\n    log(value, ...rest) {\r\n        if (isDevMode()) {\r\n            console.log(value, ...rest);\r\n        }\r\n    }\r\n    error(error) {\r\n        this.errorHandler.handleError(error);\r\n    }\r\n    warn(value, ...rest) {\r\n        console.warn(value, ...rest);\r\n    }\r\n};\nOwlLogger.ɵfac = function OwlLogger_Factory(t) { return new (t || OwlLogger)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nOwlLogger.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OwlLogger, factory: function (t) { return OwlLogger.ɵfac(t); } });\r\nOwlLogger.ctorParameters = () => [\r\n    { type: ErrorHandler }\r\n];\n\n/**\r\n * Current state information and their tags.\r\n */\r\nclass States {\r\n}\r\n/**\r\n * Enumeration for types.\r\n * @enum {String}\r\n */\r\nvar Type;\r\n(function (Type) {\r\n    Type[\"Event\"] = \"event\";\r\n    Type[\"State\"] = \"state\";\r\n})(Type || (Type = {}));\r\n;\r\n/**\r\n * Enumeration for width.\r\n * @enum {String}\r\n */\r\nvar Width;\r\n(function (Width) {\r\n    Width[\"Default\"] = \"default\";\r\n    Width[\"Inner\"] = \"inner\";\r\n    Width[\"Outer\"] = \"outer\";\r\n})(Width || (Width = {}));\r\n;\r\n/**\r\n * Model for coords of .owl-stage\r\n */\r\nclass Coords {\r\n}\r\n/**\r\n * Model for all current data of carousel\r\n */\r\nclass CarouselCurrentData {\r\n}\r\nlet CarouselService = class CarouselService {\r\n    constructor(logger) {\r\n        this.logger = logger;\r\n        /**\r\n       * Subject for passing data needed for managing View\r\n       */\r\n        this._viewSettingsShipper$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel got initializes\r\n       */\r\n        this._initializedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel's settings start changinf\r\n       */\r\n        this._changeSettingsCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel's settings have changed\r\n       */\r\n        this._changedSettingsCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel starts translating or moving\r\n       */\r\n        this._translateCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel stopped translating or moving\r\n       */\r\n        this._translatedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the carousel's rebuilding caused by 'resize' event starts\r\n       */\r\n        this._resizeCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification  when the carousel's rebuilding caused by 'resize' event is ended\r\n       */\r\n        this._resizedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the refresh of carousel starts\r\n       */\r\n        this._refreshCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the refresh of carousel is ended\r\n       */\r\n        this._refreshedCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the dragging of carousel starts\r\n       */\r\n        this._dragCarousel$ = new Subject();\r\n        /**\r\n       * Subject for notification when the dragging of carousel is ended\r\n       */\r\n        this._draggedCarousel$ = new Subject();\r\n        /**\r\n         * Current settings for the carousel.\r\n         */\r\n        this.settings = {\r\n            items: 0\r\n        };\r\n        /**\r\n       * Initial data for setting classes to element .owl-carousel\r\n       */\r\n        this.owlDOMData = {\r\n            rtl: false,\r\n            isResponsive: false,\r\n            isRefreshed: false,\r\n            isLoaded: false,\r\n            isLoading: false,\r\n            isMouseDragable: false,\r\n            isGrab: false,\r\n            isTouchDragable: false\r\n        };\r\n        /**\r\n       * Initial data of .owl-stage\r\n       */\r\n        this.stageData = {\r\n            transform: 'translate3d(0px,0px,0px)',\r\n            transition: '0s',\r\n            width: 0,\r\n            paddingL: 0,\r\n            paddingR: 0\r\n        };\r\n        /**\r\n         * All real items.\r\n         */\r\n        this._items = []; // is equal to this.slides\r\n        /**\r\n       * Array with width of every slide.\r\n       */\r\n        this._widths = [];\r\n        /**\r\n       * Currently suppressed events to prevent them from beeing retriggered.\r\n       */\r\n        this._supress = {};\r\n        /**\r\n         * References to the running plugins of this carousel.\r\n         */\r\n        this._plugins = {};\r\n        /**\r\n       * Absolute current position.\r\n       */\r\n        this._current = null;\r\n        /**\r\n       * All cloned items.\r\n       */\r\n        this._clones = [];\r\n        /**\r\n         * Merge values of all items.\r\n         * @todo Maybe this could be part of a plugin.\r\n         */\r\n        this._mergers = [];\r\n        /**\r\n       * Animation speed in milliseconds.\r\n       */\r\n        this._speed = null;\r\n        /**\r\n       * Coordinates of all items in pixel.\r\n       * @todo The name of this member is missleading.\r\n       */\r\n        this._coordinates = [];\r\n        /**\r\n       * Current breakpoint.\r\n       * @todo Real media queries would be nice.\r\n       */\r\n        this._breakpoint = null;\r\n        /**\r\n         * Prefix for id of cloned slides\r\n         */\r\n        this.clonedIdPrefix = 'cloned-';\r\n        /**\r\n         * Current options set by the caller including defaults.\r\n         */\r\n        this._options = {};\r\n        /**\r\n         * Invalidated parts within the update process.\r\n         */\r\n        this._invalidated = {};\r\n        /**\r\n         * Current state information and their tags.\r\n         */\r\n        this._states = {\r\n            current: {},\r\n            tags: {\r\n                initializing: ['busy'],\r\n                animating: ['busy'],\r\n                dragging: ['interacting']\r\n            }\r\n        };\r\n        /**\r\n         * Ordered list of workers for the update process.\r\n       */\r\n        this._pipe = [\r\n            // {\r\n            //   filter: ['width', 'settings'],\r\n            //   run: () => {\r\n            //     this._width = this.carouselWindowWidth;\r\n            //   }\r\n            // },\r\n            {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: cache => {\r\n                    cache.current = this._items && this._items[this.relative(this._current)].id;\r\n                }\r\n            },\r\n            // {\r\n            //   filter: ['items', 'settings'],\r\n            //   run: function() {\r\n            //     // this.$stage.children('.cloned').remove();\r\n            //   }\r\n            // },\r\n            {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: (cache) => {\r\n                    const margin = this.settings.margin || '', grid = !this.settings.autoWidth, rtl = this.settings.rtl, css = {\r\n                        'margin-left': rtl ? margin : '',\r\n                        'margin-right': rtl ? '' : margin\r\n                    };\r\n                    if (!grid) {\r\n                        this.slidesData.forEach(slide => {\r\n                            slide.marginL = css['margin-left'];\r\n                            slide.marginR = css['margin-right'];\r\n                        });\r\n                    }\r\n                    cache.css = css;\r\n                }\r\n            }, {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: (cache) => {\r\n                    const width = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin, grid = !this.settings.autoWidth, widths = [];\r\n                    let merge = null, iterator = this._items.length;\r\n                    cache.items = {\r\n                        merge: false,\r\n                        width: width\r\n                    };\r\n                    while (iterator--) {\r\n                        merge = this._mergers[iterator];\r\n                        merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\r\n                        cache.items.merge = merge > 1 || cache.items.merge;\r\n                        widths[iterator] = !grid ? this._items[iterator].width ? this._items[iterator].width : width : width * merge;\r\n                    }\r\n                    this._widths = widths;\r\n                    this.slidesData.forEach((slide, i) => {\r\n                        slide.width = this._widths[i];\r\n                        slide.marginR = cache.css['margin-right'];\r\n                        slide.marginL = cache.css['margin-left'];\r\n                    });\r\n                }\r\n            }, {\r\n                filter: ['items', 'settings'],\r\n                run: () => {\r\n                    const clones = [], items = this._items, settings = this.settings, \r\n                    // TODO: Should be computed from number of min width items in stage\r\n                    view = Math.max(settings.items * 2, 4), size = Math.ceil(items.length / 2) * 2;\r\n                    let append = [], prepend = [], repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0;\r\n                    repeat /= 2;\r\n                    while (repeat--) {\r\n                        // Switch to only using appended clones\r\n                        clones.push(this.normalize(clones.length / 2, true));\r\n                        append.push(Object.assign({}, this.slidesData[clones[clones.length - 1]]));\r\n                        clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\r\n                        prepend.unshift(Object.assign({}, this.slidesData[clones[clones.length - 1]]));\r\n                    }\r\n                    this._clones = clones;\r\n                    append = append.map(slide => {\r\n                        slide.id = `${this.clonedIdPrefix}${slide.id}`;\r\n                        slide.isActive = false;\r\n                        slide.isCloned = true;\r\n                        return slide;\r\n                    });\r\n                    prepend = prepend.map(slide => {\r\n                        slide.id = `${this.clonedIdPrefix}${slide.id}`;\r\n                        slide.isActive = false;\r\n                        slide.isCloned = true;\r\n                        return slide;\r\n                    });\r\n                    this.slidesData = prepend.concat(this.slidesData).concat(append);\r\n                }\r\n            }, {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: () => {\r\n                    const rtl = this.settings.rtl ? 1 : -1, size = this._clones.length + this._items.length, coordinates = [];\r\n                    let iterator = -1, previous = 0, current = 0;\r\n                    while (++iterator < size) {\r\n                        previous = coordinates[iterator - 1] || 0;\r\n                        current = this._widths[this.relative(iterator)] + this.settings.margin;\r\n                        coordinates.push(previous + current * rtl);\r\n                    }\r\n                    this._coordinates = coordinates;\r\n                }\r\n            }, {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: () => {\r\n                    const padding = this.settings.stagePadding, coordinates = this._coordinates, css = {\r\n                        'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\r\n                        'padding-left': padding || '',\r\n                        'padding-right': padding || ''\r\n                    };\r\n                    this.stageData.width = css.width; // use this property in *ngIf directive for .owl-stage element\r\n                    this.stageData.paddingL = css['padding-left'];\r\n                    this.stageData.paddingR = css['padding-right'];\r\n                }\r\n            }, {\r\n                //   filter: [ 'width', 'items', 'settings' ],\r\n                //   run: cache => {\r\n                // \t\t// this method sets the width for every slide, but I set it in different way earlier\r\n                // \t\tconst grid = !this.settings.autoWidth,\r\n                // \t\titems = this.$stage.children(); // use this.slidesData\r\n                //     let iterator = this._coordinates.length;\r\n                //     if (grid && cache.items.merge) {\r\n                //       while (iterator--) {\r\n                //         cache.css.width = this._widths[this.relative(iterator)];\r\n                //         items.eq(iterator).css(cache.css);\r\n                //       }\r\n                //     } else if (grid) {\r\n                //       cache.css.width = cache.items.width;\r\n                //       items.css(cache.css);\r\n                //     }\r\n                //   }\r\n                // }, {\r\n                //   filter: [ 'items' ],\r\n                //   run: function() {\r\n                //     this._coordinates.length < 1 && this.$stage.removeAttr('style');\r\n                //   }\r\n                // }, {\r\n                filter: ['width', 'items', 'settings'],\r\n                run: cache => {\r\n                    let current = cache.current ? this.slidesData.findIndex(slide => slide.id === cache.current) : 0;\r\n                    current = Math.max(this.minimum(), Math.min(this.maximum(), current));\r\n                    this.reset(current);\r\n                }\r\n            }, {\r\n                filter: ['position'],\r\n                run: () => {\r\n                    this.animate(this.coordinates(this._current));\r\n                }\r\n            }, {\r\n                filter: ['width', 'position', 'items', 'settings'],\r\n                run: () => {\r\n                    const rtl = this.settings.rtl ? 1 : -1, padding = this.settings.stagePadding * 2, matches = [];\r\n                    let begin, end, inner, outer, i, n;\r\n                    begin = this.coordinates(this.current());\r\n                    if (typeof begin === 'number') {\r\n                        begin += padding;\r\n                    }\r\n                    else {\r\n                        begin = 0;\r\n                    }\r\n                    end = begin + this.width() * rtl;\r\n                    if (rtl === -1 && this.settings.center) {\r\n                        const result = this._coordinates.filter(element => {\r\n                            return this.settings.items % 2 === 1 ? element >= begin : element > begin;\r\n                        });\r\n                        begin = result.length ? result[result.length - 1] : begin;\r\n                    }\r\n                    for (i = 0, n = this._coordinates.length; i < n; i++) {\r\n                        inner = Math.ceil(this._coordinates[i - 1] || 0);\r\n                        outer = Math.ceil(Math.abs(this._coordinates[i]) + padding * rtl);\r\n                        if ((this._op(inner, '<=', begin) && (this._op(inner, '>', end)))\r\n                            || (this._op(outer, '<', begin) && this._op(outer, '>', end))) {\r\n                            matches.push(i);\r\n                        }\r\n                    }\r\n                    this.slidesData.forEach(slide => {\r\n                        slide.isActive = false;\r\n                        return slide;\r\n                    });\r\n                    matches.forEach(item => {\r\n                        this.slidesData[item].isActive = true;\r\n                    });\r\n                    if (this.settings.center) {\r\n                        this.slidesData.forEach(slide => {\r\n                            slide.isCentered = false;\r\n                            return slide;\r\n                        });\r\n                        this.slidesData[this.current()].isCentered = true;\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n    // Is needed for tests\r\n    get invalidated() {\r\n        return this._invalidated;\r\n    }\r\n    // is needed for tests\r\n    get states() {\r\n        return this._states;\r\n    }\r\n    /**\r\n     * Makes _viewSettingsShipper$ Subject become Observable\r\n     * @returns Observable of _viewSettingsShipper$ Subject\r\n     */\r\n    getViewCurSettings() {\r\n        return this._viewSettingsShipper$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _initializedCarousel$ Subject become Observable\r\n     * @returns Observable of _initializedCarousel$ Subject\r\n     */\r\n    getInitializedState() {\r\n        return this._initializedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _changeSettingsCarousel$ Subject become Observable\r\n     * @returns Observable of _changeSettingsCarousel$ Subject\r\n     */\r\n    getChangeState() {\r\n        return this._changeSettingsCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _changedSettingsCarousel$ Subject become Observable\r\n     * @returns Observable of _changedSettingsCarousel$ Subject\r\n     */\r\n    getChangedState() {\r\n        return this._changedSettingsCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _translateCarousel$ Subject become Observable\r\n     * @returns Observable of _translateCarousel$ Subject\r\n     */\r\n    getTranslateState() {\r\n        return this._translateCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _translatedCarousel$ Subject become Observable\r\n     * @returns Observable of _translatedCarousel$ Subject\r\n     */\r\n    getTranslatedState() {\r\n        return this._translatedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _resizeCarousel$ Subject become Observable\r\n     * @returns Observable of _resizeCarousel$ Subject\r\n     */\r\n    getResizeState() {\r\n        return this._resizeCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _resizedCarousel$ Subject become Observable\r\n     * @returns Observable of _resizedCarousel$ Subject\r\n     */\r\n    getResizedState() {\r\n        return this._resizedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _refreshCarousel$ Subject become Observable\r\n     * @returns Observable of _refreshCarousel$ Subject\r\n     */\r\n    getRefreshState() {\r\n        return this._refreshCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _refreshedCarousel$ Subject become Observable\r\n     * @returns Observable of _refreshedCarousel$ Subject\r\n     */\r\n    getRefreshedState() {\r\n        return this._refreshedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _dragCarousel$ Subject become Observable\r\n     * @returns Observable of _dragCarousel$ Subject\r\n     */\r\n    getDragState() {\r\n        return this._dragCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Makes _draggedCarousel$ Subject become Observable\r\n     * @returns Observable of _draggedCarousel$ Subject\r\n     */\r\n    getDraggedState() {\r\n        return this._draggedCarousel$.asObservable();\r\n    }\r\n    /**\r\n     * Setups custom options expanding default options\r\n     * @param options custom options\r\n     */\r\n    setOptions(options) {\r\n        const configOptions = new OwlCarouselOConfig();\r\n        const checkedOptions = this._validateOptions(options, configOptions);\r\n        this._options = Object.assign(Object.assign({}, configOptions), checkedOptions);\r\n    }\r\n    /**\r\n     * Checks whether user's option are set properly. Cheking is based on typings;\r\n     * @param options options set by user\r\n     * @param configOptions default options\r\n     * @returns checked and modified (if it's needed) user's options\r\n     *\r\n     * Notes:\r\n     * \t- if user set option with wrong type, it'll be written in console\r\n     */\r\n    _validateOptions(options, configOptions) {\r\n        const checkedOptions = Object.assign({}, options);\r\n        const mockedTypes = new OwlOptionsMockedTypes();\r\n        const setRightOption = (type, key) => {\r\n            this.logger.log(`options.${key} must be type of ${type}; ${key}=${options[key]} skipped to defaults: ${key}=${configOptions[key]}`);\r\n            return configOptions[key];\r\n        };\r\n        for (const key in checkedOptions) {\r\n            if (checkedOptions.hasOwnProperty(key)) {\r\n                // condition could be shortened but it gets harder for understanding\r\n                if (mockedTypes[key] === 'number') {\r\n                    if (this._isNumeric(checkedOptions[key])) {\r\n                        checkedOptions[key] = +checkedOptions[key];\r\n                        checkedOptions[key] = key === 'items' ? this._validateItems(checkedOptions[key], checkedOptions.skip_validateItems) : checkedOptions[key];\r\n                    }\r\n                    else {\r\n                        checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                    }\r\n                }\r\n                else if (mockedTypes[key] === 'boolean' && typeof checkedOptions[key] !== 'boolean') {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'number|boolean' && !this._isNumberOrBoolean(checkedOptions[key])) {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'number|string' && !this._isNumberOrString(checkedOptions[key])) {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'string|boolean' && !this._isStringOrBoolean(checkedOptions[key])) {\r\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                }\r\n                else if (mockedTypes[key] === 'string[]') {\r\n                    if (Array.isArray(checkedOptions[key])) {\r\n                        let isString = false;\r\n                        checkedOptions[key].forEach(element => {\r\n                            isString = typeof element === 'string' ? true : false;\r\n                        });\r\n                        if (!isString) {\r\n                            checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                        }\r\n                        ;\r\n                    }\r\n                    else {\r\n                        checkedOptions[key] = setRightOption(mockedTypes[key], key);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return checkedOptions;\r\n    }\r\n    /**\r\n     * Checks the option `items` set by user and if it bigger than number of slides, the function returns number of slides\r\n     * @param items option items set by user\r\n     * @param skip_validateItems option `skip_validateItems` set by user\r\n     * @returns right number of items\r\n     */\r\n    _validateItems(items, skip_validateItems) {\r\n        let result = items;\r\n        if (items > this._items.length) {\r\n            if (skip_validateItems) {\r\n                this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. The navigation got disabled');\r\n            }\r\n            else {\r\n                result = this._items.length;\r\n                this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. This option is updated to the current number of slides and the navigation got disabled');\r\n            }\r\n        }\r\n        else {\r\n            if (items === this._items.length && (this.settings.dots || this.settings.nav)) {\r\n                this.logger.log('Option \\'items\\' in your options is equal to the number of slides. So the navigation got disabled');\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Set current width of carousel\r\n     * @param width width of carousel Window\r\n     */\r\n    setCarouselWidth(width) {\r\n        this._width = width;\r\n    }\r\n    /**\r\n       * Setups the current settings.\r\n       * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\r\n       * @todo Support for media queries by using `matchMedia` would be nice.\r\n       * @param carouselWidth width of carousel\r\n       * @param slides array of slides\r\n       * @param options options set by user\r\n       */\r\n    setup(carouselWidth, slides, options) {\r\n        this.setCarouselWidth(carouselWidth);\r\n        this.setItems(slides);\r\n        this._defineSlidesData();\r\n        this.setOptions(options);\r\n        this.settings = Object.assign({}, this._options);\r\n        this.setOptionsForViewport();\r\n        this._trigger('change', { property: { name: 'settings', value: this.settings } });\r\n        this.invalidate('settings'); // must be call of this function;\r\n        this._trigger('changed', { property: { name: 'settings', value: this.settings } });\r\n    }\r\n    /**\r\n     * Set options for current viewport\r\n     */\r\n    setOptionsForViewport() {\r\n        const viewport = this._width, overwrites = this._options.responsive;\r\n        let match = -1;\r\n        if (!Object.keys(overwrites).length) {\r\n            return;\r\n        }\r\n        if (!viewport) {\r\n            this.settings.items = 1;\r\n            return;\r\n        }\r\n        for (const key in overwrites) {\r\n            if (overwrites.hasOwnProperty(key)) {\r\n                if (+key <= viewport && +key > match) {\r\n                    match = Number(key);\r\n                }\r\n            }\r\n        }\r\n        this.settings = Object.assign(Object.assign(Object.assign({}, this._options), overwrites[match]), { items: (overwrites[match] && overwrites[match].items) ? this._validateItems(overwrites[match].items, this._options.skip_validateItems) : this._options.items });\r\n        // if (typeof this.settings.stagePadding === 'function') {\r\n        // \tthis.settings.stagePadding = this.settings.stagePadding();\r\n        // }\r\n        delete this.settings.responsive;\r\n        this.owlDOMData.isResponsive = true;\r\n        this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\r\n        this.owlDOMData.isTouchDragable = this.settings.touchDrag;\r\n        const mergers = [];\r\n        this._items.forEach(item => {\r\n            const mergeN = this.settings.merge ? item.dataMerge : 1;\r\n            mergers.push(mergeN);\r\n        });\r\n        this._mergers = mergers;\r\n        this._breakpoint = match;\r\n        this.invalidate('settings');\r\n    }\r\n    /**\r\n     * Initializes the carousel.\r\n     * @param slides array of CarouselSlideDirective\r\n     */\r\n    initialize(slides) {\r\n        this.enter('initializing');\r\n        // this.trigger('initialize');\r\n        this.owlDOMData.rtl = this.settings.rtl;\r\n        if (this._mergers.length) {\r\n            this._mergers = [];\r\n        }\r\n        slides.forEach(item => {\r\n            const mergeN = this.settings.merge ? item.dataMerge : 1;\r\n            this._mergers.push(mergeN);\r\n        });\r\n        this._clones = [];\r\n        this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0);\r\n        this.invalidate('items');\r\n        this.refresh();\r\n        this.owlDOMData.isLoaded = true;\r\n        this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\r\n        this.owlDOMData.isTouchDragable = this.settings.touchDrag;\r\n        this.sendChanges();\r\n        this.leave('initializing');\r\n        this._trigger('initialized');\r\n    }\r\n    ;\r\n    /**\r\n     * Sends all data needed for View\r\n     */\r\n    sendChanges() {\r\n        this._viewSettingsShipper$.next({\r\n            owlDOMData: this.owlDOMData,\r\n            stageData: this.stageData,\r\n            slidesData: this.slidesData,\r\n            navData: this.navData,\r\n            dotsData: this.dotsData\r\n        });\r\n    }\r\n    /**\r\n       * Updates option logic if necessery\r\n       */\r\n    _optionsLogic() {\r\n        if (this.settings.autoWidth) {\r\n            this.settings.stagePadding = 0;\r\n            this.settings.merge = false;\r\n        }\r\n    }\r\n    /**\r\n     * Updates the view\r\n     */\r\n    update() {\r\n        let i = 0;\r\n        const n = this._pipe.length, filter = item => this._invalidated[item], cache = {};\r\n        while (i < n) {\r\n            const filteredPipe = this._pipe[i].filter.filter(filter);\r\n            if (this._invalidated.all || filteredPipe.length > 0) {\r\n                this._pipe[i].run(cache);\r\n            }\r\n            i++;\r\n        }\r\n        this.slidesData.forEach(slide => slide.classes = this.setCurSlideClasses(slide));\r\n        this.sendChanges();\r\n        this._invalidated = {};\r\n        if (!this.is('valid')) {\r\n            this.enter('valid');\r\n        }\r\n    }\r\n    /**\r\n       * Gets the width of the view.\r\n       * @param [dimension=Width.Default] The dimension to return\r\n       * @returns The width of the view in pixel.\r\n       */\r\n    width(dimension) {\r\n        dimension = dimension || Width.Default;\r\n        switch (dimension) {\r\n            case Width.Inner:\r\n            case Width.Outer:\r\n                return this._width;\r\n            default:\r\n                return this._width - this.settings.stagePadding * 2 + this.settings.margin;\r\n        }\r\n    }\r\n    /**\r\n       * Refreshes the carousel primarily for adaptive purposes.\r\n       */\r\n    refresh() {\r\n        this.enter('refreshing');\r\n        this._trigger('refresh');\r\n        this._defineSlidesData();\r\n        this.setOptionsForViewport();\r\n        this._optionsLogic();\r\n        // this.$element.addClass(this.options.refreshClass);\r\n        this.update();\r\n        // this.$element.removeClass(this.options.refreshClass);\r\n        this.leave('refreshing');\r\n        this._trigger('refreshed');\r\n    }\r\n    /**\r\n       * Checks window `resize` event.\r\n       * @param curWidth width of .owl-carousel\r\n       */\r\n    onResize(curWidth) {\r\n        if (!this._items.length) {\r\n            return false;\r\n        }\r\n        this.setCarouselWidth(curWidth);\r\n        this.enter('resizing');\r\n        // if (this.trigger('resize').isDefaultPrevented()) {\r\n        // \tthis.leave('resizing');\r\n        // \treturn false;\r\n        // }\r\n        this._trigger('resize');\r\n        this.invalidate('width');\r\n        this.refresh();\r\n        this.leave('resizing');\r\n        this._trigger('resized');\r\n    }\r\n    /**\r\n       * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\r\n       * @todo Horizontal swipe threshold as option\r\n       * @todo #261\r\n       * @param event - The event arguments.\r\n       * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\r\n       */\r\n    prepareDragging(event) {\r\n        let stage = null, transformArr;\r\n        // could be 5 commented lines below; However there's stage transform in stageData and in updates after each move of stage\r\n        // stage = getComputedStyle(this.el.nativeElement).transform.replace(/.*\\(|\\)| /g, '').split(',');\r\n        // stage = {\r\n        //   x: stage[stage.length === 16 ? 12 : 4],\r\n        //   y: stage[stage.length === 16 ? 13 : 5]\r\n        // };\r\n        transformArr = this.stageData.transform.replace(/.*\\(|\\)| |[^,-\\d]\\w|\\)/g, '').split(',');\r\n        stage = {\r\n            x: +transformArr[0],\r\n            y: +transformArr[1]\r\n        };\r\n        if (this.is('animating')) {\r\n            this.invalidate('position');\r\n        }\r\n        if (event.type === 'mousedown') {\r\n            this.owlDOMData.isGrab = true;\r\n        }\r\n        this.speed(0);\r\n        return stage;\r\n    }\r\n    /**\r\n     * Enters into a 'dragging' state\r\n     */\r\n    enterDragging() {\r\n        this.enter('dragging');\r\n        this._trigger('drag');\r\n    }\r\n    /**\r\n       * Defines new coords for .owl-stage while dragging it\r\n       * @todo #261\r\n       * @param event the event arguments.\r\n       * @param dragData initial data got after starting dragging\r\n       * @returns coords or false\r\n       */\r\n    defineNewCoordsDrag(event, dragData) {\r\n        let minimum = null, maximum = null, pull = null;\r\n        const delta = this.difference(dragData.pointer, this.pointer(event)), stage = this.difference(dragData.stage.start, delta);\r\n        if (!this.is('dragging')) {\r\n            return false;\r\n        }\r\n        if (this.settings.loop) {\r\n            minimum = this.coordinates(this.minimum());\r\n            maximum = +this.coordinates(this.maximum() + 1) - minimum;\r\n            stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\r\n        }\r\n        else {\r\n            minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\r\n            maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\r\n            pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\r\n            stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\r\n        }\r\n        return stage;\r\n    }\r\n    /**\r\n       * Finishes dragging of carousel when `touchend` and `mouseup` events fire.\r\n       * @todo #261\r\n       * @todo Threshold for click event\r\n       * @param event the event arguments.\r\n       * @param dragObj the object with dragging settings and states\r\n       * @param clickAttacher function which attaches click handler to slide or its children elements in order to prevent event bubling\r\n       */\r\n    finishDragging(event, dragObj, clickAttacher) {\r\n        const directions = ['right', 'left'], delta = this.difference(dragObj.pointer, this.pointer(event)), stage = dragObj.stage.current, direction = directions[+(this.settings.rtl ? delta.x < +this.settings.rtl : delta.x > +this.settings.rtl)];\r\n        let currentSlideI, current, newCurrent;\r\n        if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\r\n            this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed);\r\n            currentSlideI = this.closest(stage.x, delta.x !== 0 ? direction : dragObj.direction);\r\n            current = this.current();\r\n            newCurrent = this.current(currentSlideI === -1 ? undefined : currentSlideI);\r\n            if (current !== newCurrent) {\r\n                this.invalidate('position');\r\n                this.update();\r\n            }\r\n            dragObj.direction = direction;\r\n            if (Math.abs(delta.x) > 3 || new Date().getTime() - dragObj.time > 300) {\r\n                clickAttacher();\r\n            }\r\n        }\r\n        if (!this.is('dragging')) {\r\n            return;\r\n        }\r\n        this.leave('dragging');\r\n        this._trigger('dragged');\r\n    }\r\n    /**\r\n       * Gets absolute position of the closest item for a coordinate.\r\n       * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\r\n       * @param coordinate The coordinate in pixel.\r\n       * @param direction The direction to check for the closest item. Ether `left` or `right`.\r\n       * @returns The absolute position of the closest item.\r\n       */\r\n    closest(coordinate, direction) {\r\n        const pull = 30, width = this.width();\r\n        let coordinates = this.coordinates(), position = -1;\r\n        if (this.settings.center) {\r\n            coordinates = coordinates.map(item => {\r\n                if (item === 0) {\r\n                    item += 0.000001;\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n        // option 'freeDrag' doesn't have realization and using it here creates problem:\r\n        // variable 'position' stays unchanged (it equals -1 at the begging) and thus method returns -1\r\n        // Returning value is consumed by method current(), which taking -1 as argument calculates the index of new current slide\r\n        // In case of having 5 slides ans 'loop=false; calling 'current(-1)' sets props '_current' as 4. Just last slide remains visible instead of 3 last slides.\r\n        // if (!this.settings.freeDrag) {\r\n        // check closest item\r\n        for (let i = 0; i < coordinates.length; i++) {\r\n            if (direction === 'left' && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\r\n                position = i;\r\n                // on a right pull, check on previous index\r\n                // to do so, subtract width from value and set position = index + 1\r\n            }\r\n            else if (direction === 'right' && coordinate > coordinates[i] - width - pull && coordinate < coordinates[i] - width + pull) {\r\n                position = i + 1;\r\n            }\r\n            else if (this._op(coordinate, '<', coordinates[i])\r\n                && this._op(coordinate, '>', coordinates[i + 1] || coordinates[i] - width)) {\r\n                position = direction === 'left' ? i + 1 : i;\r\n            }\r\n            else if (direction === null && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\r\n                position = i;\r\n            }\r\n            if (position !== -1) {\r\n                break;\r\n            }\r\n            ;\r\n        }\r\n        // }\r\n        if (!this.settings.loop) {\r\n            // non loop boundries\r\n            if (this._op(coordinate, '>', coordinates[this.minimum()])) {\r\n                position = coordinate = this.minimum();\r\n            }\r\n            else if (this._op(coordinate, '<', coordinates[this.maximum()])) {\r\n                position = coordinate = this.maximum();\r\n            }\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n       * Animates the stage.\r\n       * @todo #270\r\n       * @param coordinate The coordinate in pixels.\r\n       */\r\n    animate(coordinate) {\r\n        const animate = this.speed() > 0;\r\n        if (this.is('animating')) {\r\n            this.onTransitionEnd();\r\n        }\r\n        if (animate) {\r\n            this.enter('animating');\r\n            this._trigger('translate');\r\n        }\r\n        this.stageData.transform = 'translate3d(' + coordinate + 'px,0px,0px)';\r\n        this.stageData.transition = (this.speed() / 1000) + 's' + (this.settings.slideTransition ? ' ' + this.settings.slideTransition : '');\r\n        // also there was transition by means of JQuery.animate or css-changing property left\r\n    }\r\n    /**\r\n       * Checks whether the carousel is in a specific state or not.\r\n       * @param state The state to check.\r\n       * @returns The flag which indicates if the carousel is busy.\r\n       */\r\n    is(state) {\r\n        return this._states.current[state] && this._states.current[state] > 0;\r\n    }\r\n    ;\r\n    /**\r\n       * Sets the absolute position of the current item.\r\n       * @param position The new absolute position or nothing to leave it unchanged.\r\n       * @returns The absolute position of the current item.\r\n       */\r\n    current(position) {\r\n        if (position === undefined) {\r\n            return this._current;\r\n        }\r\n        if (this._items.length === 0) {\r\n            return undefined;\r\n        }\r\n        position = this.normalize(position);\r\n        if (this._current !== position) {\r\n            const event = this._trigger('change', { property: { name: 'position', value: position } });\r\n            // if (event.data !== undefined) {\r\n            // \tposition = this.normalize(event.data);\r\n            // }\r\n            this._current = position;\r\n            this.invalidate('position');\r\n            this._trigger('changed', { property: { name: 'position', value: this._current } });\r\n        }\r\n        return this._current;\r\n    }\r\n    /**\r\n       * Invalidates the given part of the update routine.\r\n       * @param part The part to invalidate.\r\n       * @returns The invalidated parts.\r\n       */\r\n    invalidate(part) {\r\n        if (typeof part === 'string') {\r\n            this._invalidated[part] = true;\r\n            if (this.is('valid')) {\r\n                this.leave('valid');\r\n            }\r\n        }\r\n        return Object.keys(this._invalidated);\r\n    }\r\n    ;\r\n    /**\r\n     * Resets the absolute position of the current item.\r\n     * @param position the absolute position of the new item.\r\n     */\r\n    reset(position) {\r\n        position = this.normalize(position);\r\n        if (position === undefined) {\r\n            return;\r\n        }\r\n        this._speed = 0;\r\n        this._current = position;\r\n        this._suppress(['translate', 'translated']);\r\n        this.animate(this.coordinates(position));\r\n        this._release(['translate', 'translated']);\r\n    }\r\n    /**\r\n       * Normalizes an absolute or a relative position of an item.\r\n       * @param position The absolute or relative position to normalize.\r\n       * @param relative Whether the given position is relative or not.\r\n       * @returns The normalized position.\r\n       */\r\n    normalize(position, relative) {\r\n        const n = this._items.length, m = relative ? 0 : this._clones.length;\r\n        if (!this._isNumeric(position) || n < 1) {\r\n            position = undefined;\r\n        }\r\n        else if (position < 0 || position >= n + m) {\r\n            position = ((position - m / 2) % n + n) % n + m / 2;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n       * Converts an absolute position of an item into a relative one.\r\n       * @param position The absolute position to convert.\r\n       * @returns The converted position.\r\n       */\r\n    relative(position) {\r\n        position -= this._clones.length / 2;\r\n        return this.normalize(position, true);\r\n    }\r\n    /**\r\n       * Gets the maximum position for the current item.\r\n       * @param relative Whether to return an absolute position or a relative position.\r\n       * @returns number of maximum position\r\n       */\r\n    maximum(relative = false) {\r\n        const settings = this.settings;\r\n        let maximum = this._coordinates.length, iterator, reciprocalItemsWidth, elementWidth;\r\n        if (settings.loop) {\r\n            maximum = this._clones.length / 2 + this._items.length - 1;\r\n        }\r\n        else if (settings.autoWidth || settings.merge) {\r\n            iterator = this._items.length;\r\n            reciprocalItemsWidth = this.slidesData[--iterator].width;\r\n            elementWidth = this._width;\r\n            while (iterator--) {\r\n                // it could be use this._items instead of this.slidesData;\r\n                reciprocalItemsWidth += +this.slidesData[iterator].width + this.settings.margin;\r\n                if (reciprocalItemsWidth > elementWidth) {\r\n                    break;\r\n                }\r\n            }\r\n            maximum = iterator + 1;\r\n        }\r\n        else if (settings.center) {\r\n            maximum = this._items.length - 1;\r\n        }\r\n        else {\r\n            maximum = this._items.length - settings.items;\r\n        }\r\n        if (relative) {\r\n            maximum -= this._clones.length / 2;\r\n        }\r\n        return Math.max(maximum, 0);\r\n    }\r\n    /**\r\n       * Gets the minimum position for the current item.\r\n       * @param relative Whether to return an absolute position or a relative position.\r\n       * @returns number of minimum position\r\n       */\r\n    minimum(relative = false) {\r\n        return relative ? 0 : this._clones.length / 2;\r\n    }\r\n    /**\r\n       * Gets an item at the specified relative position.\r\n       * @param position The relative position of the item.\r\n       * @returns The item at the given position or all items if no position was given.\r\n       */\r\n    items(position) {\r\n        if (position === undefined) {\r\n            return this._items.slice();\r\n        }\r\n        position = this.normalize(position, true);\r\n        return [this._items[position]];\r\n    }\r\n    /**\r\n       * Gets an item at the specified relative position.\r\n       * @param position The relative position of the item.\r\n       * @returns The item at the given position or all items if no position was given.\r\n       */\r\n    mergers(position) {\r\n        if (position === undefined) {\r\n            return this._mergers.slice();\r\n        }\r\n        position = this.normalize(position, true);\r\n        return this._mergers[position];\r\n    }\r\n    /**\r\n       * Gets the absolute positions of clones for an item.\r\n       * @param position The relative position of the item.\r\n       * @returns The absolute positions of clones for the item or all if no position was given.\r\n       */\r\n    clones(position) {\r\n        const odd = this._clones.length / 2, even = odd + this._items.length, map = index => index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;\r\n        if (position === undefined) {\r\n            return this._clones.map((v, i) => map(i));\r\n        }\r\n        return this._clones.map((v, i) => v === position ? map(i) : null).filter(item => item);\r\n    }\r\n    /**\r\n       * Sets the current animation speed.\r\n       * @param speed The animation speed in milliseconds or nothing to leave it unchanged.\r\n       * @returns The current animation speed in milliseconds.\r\n       */\r\n    speed(speed) {\r\n        if (speed !== undefined) {\r\n            this._speed = speed;\r\n        }\r\n        return this._speed;\r\n    }\r\n    /**\r\n       * Gets the coordinate of an item.\r\n       * @todo The name of this method is missleanding.\r\n       * @param position The absolute position of the item within `minimum()` and `maximum()`.\r\n       * @returns The coordinate of the item in pixel or all coordinates.\r\n       */\r\n    coordinates(position) {\r\n        let multiplier = 1, newPosition = position - 1, coordinate, result;\r\n        if (position === undefined) {\r\n            result = this._coordinates.map((item, index) => {\r\n                return this.coordinates(index);\r\n            });\r\n            return result;\r\n        }\r\n        if (this.settings.center) {\r\n            if (this.settings.rtl) {\r\n                multiplier = -1;\r\n                newPosition = position + 1;\r\n            }\r\n            coordinate = this._coordinates[position];\r\n            coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\r\n        }\r\n        else {\r\n            coordinate = this._coordinates[newPosition] || 0;\r\n        }\r\n        coordinate = Math.ceil(coordinate);\r\n        return coordinate;\r\n    }\r\n    /**\r\n       * Calculates the speed for a translation.\r\n       * @param from The absolute position of the start item.\r\n       * @param to The absolute position of the target item.\r\n       * @param factor [factor=undefined] - The time factor in milliseconds.\r\n       * @returns The time in milliseconds for the translation.\r\n       */\r\n    _duration(from, to, factor) {\r\n        if (factor === 0) {\r\n            return 0;\r\n        }\r\n        return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((+factor || this.settings.smartSpeed));\r\n    }\r\n    /**\r\n       * Slides to the specified item.\r\n       * @param position The position of the item.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    to(position, speed) {\r\n        let current = this.current(), revert = null, distance = position - this.relative(current), maximum = this.maximum(), delayForLoop = 0;\r\n        const direction = +(distance > 0) - +(distance < 0), items = this._items.length, minimum = this.minimum();\r\n        if (this.settings.loop) {\r\n            if (!this.settings.rewind && Math.abs(distance) > items / 2) {\r\n                distance += direction * -1 * items;\r\n            }\r\n            position = current + distance;\r\n            revert = ((position - minimum) % items + items) % items + minimum;\r\n            if (revert !== position && revert - distance <= maximum && revert - distance > 0) {\r\n                current = revert - distance;\r\n                position = revert;\r\n                delayForLoop = 30;\r\n                this.reset(current);\r\n                this.sendChanges();\r\n            }\r\n        }\r\n        else if (this.settings.rewind) {\r\n            maximum += 1;\r\n            position = (position % maximum + maximum) % maximum;\r\n        }\r\n        else {\r\n            position = Math.max(minimum, Math.min(maximum, position));\r\n        }\r\n        setTimeout(() => {\r\n            this.speed(this._duration(current, position, speed));\r\n            this.current(position);\r\n            this.update();\r\n        }, delayForLoop);\r\n    }\r\n    /**\r\n       * Slides to the next item.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    next(speed) {\r\n        speed = speed || false;\r\n        this.to(this.relative(this.current()) + 1, speed);\r\n    }\r\n    /**\r\n       * Slides to the previous item.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    prev(speed) {\r\n        speed = speed || false;\r\n        this.to(this.relative(this.current()) - 1, speed);\r\n    }\r\n    /**\r\n       * Handles the end of an animation.\r\n       * @param event - The event arguments.\r\n       */\r\n    onTransitionEnd(event) {\r\n        // if css2 animation then event object is undefined\r\n        if (event !== undefined) {\r\n            // event.stopPropagation();\r\n            // // Catch only owl-stage transitionEnd event\r\n            // if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)\t) {\r\n            // \treturn false;\r\n            // }\r\n            return false;\r\n        }\r\n        this.leave('animating');\r\n        this._trigger('translated');\r\n    }\r\n    /**\r\n       * Gets viewport width.\r\n       * @returns - The width in pixel.\r\n       */\r\n    _viewport() {\r\n        let width;\r\n        if (this._width) {\r\n            width = this._width;\r\n        }\r\n        else {\r\n            this.logger.log('Can not detect viewport width.');\r\n        }\r\n        return width;\r\n    }\r\n    /**\r\n       * Sets _items\r\n       * @param content The list of slides put into CarouselSlideDirectives.\r\n       */\r\n    setItems(content) {\r\n        this._items = content;\r\n    }\r\n    /**\r\n     * Sets slidesData using this._items\r\n     */\r\n    _defineSlidesData() {\r\n        // Maybe creating and using loadMap would be better in LazyLoadService.\r\n        // Hovewer in that case when 'resize' event fires, prop 'load' of all slides will get 'false' and such state of prop will be seen by View during its updating. Accordingly the code will remove slides's content from DOM even if it was loaded before.\r\n        // Thus it would be needed to add that content into DOM again.\r\n        // In order to avoid additional removing/adding loaded slides's content we use loadMap here and set restore state of prop 'load' before the View will get it.\r\n        let loadMap;\r\n        if (this.slidesData && this.slidesData.length) {\r\n            loadMap = new Map();\r\n            this.slidesData.forEach(item => {\r\n                if (item.load) {\r\n                    loadMap.set(item.id, item.load);\r\n                }\r\n            });\r\n        }\r\n        this.slidesData = this._items.map(slide => {\r\n            return {\r\n                id: `${slide.id}`,\r\n                isActive: false,\r\n                tplRef: slide.tplRef,\r\n                dataMerge: slide.dataMerge,\r\n                width: 0,\r\n                isCloned: false,\r\n                load: loadMap ? loadMap.get(slide.id) : false,\r\n                hashFragment: slide.dataHash\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Sets current classes for slide\r\n     * @param slide Slide of carousel\r\n     * @returns object with names of css-classes which are keys and true/false values\r\n     */\r\n    setCurSlideClasses(slide) {\r\n        // CSS classes: added/removed per current state of component properties\r\n        const currentClasses = {\r\n            'active': slide.isActive,\r\n            'center': slide.isCentered,\r\n            'cloned': slide.isCloned,\r\n            'animated': slide.isAnimated,\r\n            'owl-animated-in': slide.isDefAnimatedIn,\r\n            'owl-animated-out': slide.isDefAnimatedOut\r\n        };\r\n        if (this.settings.animateIn) {\r\n            currentClasses[this.settings.animateIn] = slide.isCustomAnimatedIn;\r\n        }\r\n        if (this.settings.animateOut) {\r\n            currentClasses[this.settings.animateOut] = slide.isCustomAnimatedOut;\r\n        }\r\n        return currentClasses;\r\n    }\r\n    /**\r\n       * Operators to calculate right-to-left and left-to-right.\r\n       * @param a - The left side operand.\r\n       * @param o - The operator.\r\n       * @param b - The right side operand.\r\n       * @returns true/false meaning right-to-left or left-to-right\r\n       */\r\n    _op(a, o, b) {\r\n        const rtl = this.settings.rtl;\r\n        switch (o) {\r\n            case '<':\r\n                return rtl ? a > b : a < b;\r\n            case '>':\r\n                return rtl ? a < b : a > b;\r\n            case '>=':\r\n                return rtl ? a <= b : a >= b;\r\n            case '<=':\r\n                return rtl ? a >= b : a <= b;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n       * Triggers a public event.\r\n       * @todo Remove `status`, `relatedTarget` should be used instead.\r\n       * @param name The event name.\r\n       * @param data The event data.\r\n       * @param namespace The event namespace.\r\n       * @param state The state which is associated with the event.\r\n       * @param enter Indicates if the call enters the specified state or not.\r\n       */\r\n    _trigger(name, data, namespace, state, enter) {\r\n        switch (name) {\r\n            case 'initialized':\r\n                this._initializedCarousel$.next(name);\r\n                break;\r\n            case 'change':\r\n                this._changeSettingsCarousel$.next(data);\r\n                break;\r\n            case 'changed':\r\n                this._changedSettingsCarousel$.next(data);\r\n                break;\r\n            case 'drag':\r\n                this._dragCarousel$.next(name);\r\n                break;\r\n            case 'dragged':\r\n                this._draggedCarousel$.next(name);\r\n                break;\r\n            case 'resize':\r\n                this._resizeCarousel$.next(name);\r\n                break;\r\n            case 'resized':\r\n                this._resizedCarousel$.next(name);\r\n                break;\r\n            case 'refresh':\r\n                this._refreshCarousel$.next(name);\r\n                break;\r\n            case 'refreshed':\r\n                this._refreshedCarousel$.next(name);\r\n                break;\r\n            case 'translate':\r\n                this._translateCarousel$.next(name);\r\n                break;\r\n            case 'translated':\r\n                this._translatedCarousel$.next(name);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Enters a state.\r\n     * @param name - The state name.\r\n     */\r\n    enter(name) {\r\n        [name].concat(this._states.tags[name] || []).forEach((stateName) => {\r\n            if (this._states.current[stateName] === undefined) {\r\n                this._states.current[stateName] = 0;\r\n            }\r\n            this._states.current[stateName]++;\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n       * Leaves a state.\r\n       * @param name - The state name.\r\n       */\r\n    leave(name) {\r\n        [name].concat(this._states.tags[name] || []).forEach((stateName) => {\r\n            if (this._states.current[stateName] === 0 || !!this._states.current[stateName]) {\r\n                this._states.current[stateName]--;\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n       * Registers an event or state.\r\n       * @param object - The event or state to register.\r\n       */\r\n    register(object) {\r\n        if (object.type === Type.State) {\r\n            if (!this._states.tags[object.name]) {\r\n                this._states.tags[object.name] = object.tags;\r\n            }\r\n            else {\r\n                this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\r\n            }\r\n            this._states.tags[object.name] = this._states.tags[object.name].filter((tag, i) => {\r\n                return this._states.tags[object.name].indexOf(tag) === i;\r\n            });\r\n        }\r\n    }\r\n    /**\r\n       * Suppresses events.\r\n       * @param events The events to suppress.\r\n       */\r\n    _suppress(events) {\r\n        events.forEach(event => {\r\n            this._supress[event] = true;\r\n        });\r\n    }\r\n    /**\r\n       * Releases suppressed events.\r\n       * @param events The events to release.\r\n       */\r\n    _release(events) {\r\n        events.forEach(event => {\r\n            delete this._supress[event];\r\n        });\r\n    }\r\n    /**\r\n       * Gets unified pointer coordinates from event.\r\n       * @todo #261\r\n       * @param event The `mousedown` or `touchstart` event.\r\n       * @returns Object Coords which contains `x` and `y` coordinates of current pointer position.\r\n       */\r\n    pointer(event) {\r\n        const result = { x: null, y: null };\r\n        event = event.originalEvent || event || window.event;\r\n        event = event.touches && event.touches.length ?\r\n            event.touches[0] : event.changedTouches && event.changedTouches.length ?\r\n            event.changedTouches[0] : event;\r\n        if (event.pageX) {\r\n            result.x = event.pageX;\r\n            result.y = event.pageY;\r\n        }\r\n        else {\r\n            result.x = event.clientX;\r\n            result.y = event.clientY;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n       * Determines if the input is a Number or something that can be coerced to a Number\r\n       * @param number The input to be tested\r\n       * @returns An indication if the input is a Number or can be coerced to a Number\r\n       */\r\n    _isNumeric(number) {\r\n        return !isNaN(parseFloat(number));\r\n    }\r\n    /**\r\n     * Determines whether value is number or boolean type\r\n     * @param value The input to be tested\r\n     * @returns An indication if the input is a Number or can be coerced to a Number, or Boolean\r\n     */\r\n    _isNumberOrBoolean(value) {\r\n        return this._isNumeric(value) || typeof value === 'boolean';\r\n    }\r\n    /**\r\n     * Determines whether value is number or string type\r\n     * @param value The input to be tested\r\n     * @returns An indication if the input is a Number or can be coerced to a Number, or String\r\n     */\r\n    _isNumberOrString(value) {\r\n        return this._isNumeric(value) || typeof value === 'string';\r\n    }\r\n    /**\r\n     * Determines whether value is number or string type\r\n     * @param value The input to be tested\r\n     * @returns An indication if the input is a Number or can be coerced to a Number, or String\r\n     */\r\n    _isStringOrBoolean(value) {\r\n        return typeof value === 'string' || typeof value === 'boolean';\r\n    }\r\n    /**\r\n       * Gets the difference of two vectors.\r\n       * @todo #261\r\n       * @param first The first vector.\r\n       * @param second- The second vector.\r\n       * @returns The difference.\r\n       */\r\n    difference(first, second) {\r\n        return {\r\n            x: first.x - second.x,\r\n            y: first.y - second.y\r\n        };\r\n    }\r\n};\nCarouselService.ɵfac = function CarouselService_Factory(t) { return new (t || CarouselService)(ɵngcc0.ɵɵinject(OwlLogger)); };\nCarouselService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CarouselService, factory: function (t) { return CarouselService.ɵfac(t); } });\r\nCarouselService.ctorParameters = () => [\r\n    { type: OwlLogger }\r\n];\n\nlet NavigationService = class NavigationService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        /**\r\n         * Indicates whether the plugin is initialized or not.\r\n         */\r\n        this._initialized = false;\r\n        /**\r\n         * The current paging indexes.\r\n         */\r\n        this._pages = [];\r\n        /**\r\n         * Data for navigation elements of the user interface.\r\n         */\r\n        this._navData = {\r\n            disabled: false,\r\n            prev: {\r\n                disabled: false,\r\n                htmlText: ''\r\n            },\r\n            next: {\r\n                disabled: false,\r\n                htmlText: ''\r\n            },\r\n        };\r\n        /**\r\n         * Data for dot elements of the user interface.\r\n         */\r\n        this._dotsData = {\r\n            disabled: false,\r\n            dots: []\r\n        };\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.navSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(state => {\r\n            this.initialize();\r\n            this._updateNavPages();\r\n            this.draw();\r\n            this.update();\r\n            this.carouselService.sendChanges();\r\n        }));\r\n        // mostly changes in carouselService and carousel at all causes carouselService.to(). It moves stage right-left by its code and calling needed functions\r\n        // Thus this method by calling carouselService.current(position) notifies about changes\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(filter(data => data.property.name === 'position'), tap(data => {\r\n            this.update();\r\n            // should be the call of the function written at the end of comment\r\n            // but the method carouselServive.to() has setTimeout(f, 0) which contains carouselServive.update() which calls sendChanges() method.\r\n            // carouselService.navData and carouselService.dotsData update earlier than carouselServive.update() gets called\r\n            // updates of carouselService.navData and carouselService.dotsData are being happening withing carouselService.current(position) method which calls next() of _changedSettingsCarousel$\r\n            // carouselService.current(position) is being calling earlier than carouselServive.update();\r\n            // this.carouselService.sendChanges();\r\n        }));\r\n        const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(() => {\r\n            this._updateNavPages();\r\n            this.draw();\r\n            this.update();\r\n            this.carouselService.sendChanges();\r\n        }));\r\n        const navMerge$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\r\n        this.navSubscription = navMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n       * Initializes the layout of the plugin and extends the carousel.\r\n       */\r\n    initialize() {\r\n        this._navData.disabled = true;\r\n        this._navData.prev.htmlText = this.carouselService.settings.navText[0];\r\n        this._navData.next.htmlText = this.carouselService.settings.navText[1];\r\n        this._dotsData.disabled = true;\r\n        this.carouselService.navData = this._navData;\r\n        this.carouselService.dotsData = this._dotsData;\r\n    }\r\n    /**\r\n     * Calculates internal states and updates prop _pages\r\n     */\r\n    _updateNavPages() {\r\n        let i, j, k;\r\n        const lower = this.carouselService.clones().length / 2, upper = lower + this.carouselService.items().length, maximum = this.carouselService.maximum(true), pages = [], settings = this.carouselService.settings;\r\n        let size = settings.center || settings.autoWidth || settings.dotsData\r\n            ? 1 : settings.dotsEach || settings.items;\r\n        size = +size;\r\n        if (settings.slideBy !== 'page') {\r\n            settings.slideBy = Math.min(+settings.slideBy, settings.items);\r\n        }\r\n        if (settings.dots || settings.slideBy === 'page') {\r\n            for (i = lower, j = 0, k = 0; i < upper; i++) {\r\n                if (j >= size || j === 0) {\r\n                    pages.push({\r\n                        start: Math.min(maximum, i - lower),\r\n                        end: i - lower + size - 1\r\n                    });\r\n                    if (Math.min(maximum, i - lower) === maximum) {\r\n                        break;\r\n                    }\r\n                    j = 0, ++k;\r\n                }\r\n                j += this.carouselService.mergers(this.carouselService.relative(i));\r\n            }\r\n        }\r\n        this._pages = pages;\r\n    }\r\n    /**\r\n       * Draws the user interface.\r\n       * @todo The option `dotsData` wont work.\r\n       */\r\n    draw() {\r\n        let difference;\r\n        const settings = this.carouselService.settings, items = this.carouselService.items(), disabled = items.length <= settings.items;\r\n        this._navData.disabled = !settings.nav || disabled;\r\n        this._dotsData.disabled = !settings.dots || disabled;\r\n        if (settings.dots) {\r\n            difference = this._pages.length - this._dotsData.dots.length;\r\n            if (settings.dotsData && difference !== 0) {\r\n                this._dotsData.dots = [];\r\n                items.forEach(item => {\r\n                    this._dotsData.dots.push({\r\n                        active: false,\r\n                        id: `dot-${item.id}`,\r\n                        innerContent: item.dotContent,\r\n                        showInnerContent: true\r\n                    });\r\n                });\r\n            }\r\n            else if (difference > 0) {\r\n                const startI = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;\r\n                for (let i = 0; i < difference; i++) {\r\n                    this._dotsData.dots.push({\r\n                        active: false,\r\n                        id: `dot-${i + startI}`,\r\n                        innerContent: '',\r\n                        showInnerContent: false\r\n                    });\r\n                }\r\n            }\r\n            else if (difference < 0) {\r\n                this._dotsData.dots.splice(difference, Math.abs(difference));\r\n            }\r\n        }\r\n        this.carouselService.navData = this._navData;\r\n        this.carouselService.dotsData = this._dotsData;\r\n    }\r\n    ;\r\n    /**\r\n     * Updates navigation buttons's and dots's states\r\n     */\r\n    update() {\r\n        this._updateNavButtons();\r\n        this._updateDots();\r\n    }\r\n    /**\r\n     * Changes state of nav buttons (disabled, enabled)\r\n     */\r\n    _updateNavButtons() {\r\n        const settings = this.carouselService.settings, loop = settings.loop || settings.rewind, index = this.carouselService.relative(this.carouselService.current());\r\n        if (settings.nav) {\r\n            this._navData.prev.disabled = !loop && index <= this.carouselService.minimum(true);\r\n            this._navData.next.disabled = !loop && index >= this.carouselService.maximum(true);\r\n        }\r\n        this.carouselService.navData = this._navData;\r\n    }\r\n    /**\r\n     * Changes active dot if page becomes changed\r\n     */\r\n    _updateDots() {\r\n        let curActiveDotI;\r\n        if (!this.carouselService.settings.dots) {\r\n            return;\r\n        }\r\n        this._dotsData.dots.forEach(item => {\r\n            if (item.active === true) {\r\n                item.active = false;\r\n            }\r\n        });\r\n        curActiveDotI = this._current();\r\n        if (this._dotsData.dots.length) {\r\n            this._dotsData.dots[curActiveDotI].active = true;\r\n        }\r\n        this.carouselService.dotsData = this._dotsData;\r\n    }\r\n    /**\r\n       * Gets the current page position of the carousel.\r\n       * @returns the current page position of the carousel\r\n       */\r\n    _current() {\r\n        const current = this.carouselService.relative(this.carouselService.current());\r\n        let finalCurrent;\r\n        const pages = this._pages.filter((page, index) => {\r\n            return page.start <= current && page.end >= current;\r\n        }).pop();\r\n        finalCurrent = this._pages.findIndex(page => {\r\n            return page.start === pages.start && page.end === pages.end;\r\n        });\r\n        return finalCurrent;\r\n    }\r\n    ;\r\n    /**\r\n       * Gets the current succesor/predecessor position.\r\n     * @param sussessor position of slide\r\n       * @returns the current succesor/predecessor position\r\n       */\r\n    _getPosition(successor) {\r\n        let position, length;\r\n        const settings = this.carouselService.settings;\r\n        if (settings.slideBy === 'page') {\r\n            position = this._current();\r\n            length = this._pages.length;\r\n            successor ? ++position : --position;\r\n            position = this._pages[((position % length) + length) % length].start;\r\n        }\r\n        else {\r\n            position = this.carouselService.relative(this.carouselService.current());\r\n            length = this.carouselService.items().length;\r\n            successor ? position += +settings.slideBy : position -= +settings.slideBy;\r\n        }\r\n        return position;\r\n    }\r\n    ;\r\n    /**\r\n       * Slides to the next item or page.\r\n       * @param speed The time in milliseconds for the transition.\r\n       */\r\n    next(speed) {\r\n        this.carouselService.to(this._getPosition(true), speed);\r\n    }\r\n    ;\r\n    /**\r\n     * Slides to the previous item or page.\r\n     * @param speed The time in milliseconds for the transition.\r\n     */\r\n    prev(speed) {\r\n        this.carouselService.to(this._getPosition(false), speed);\r\n    }\r\n    ;\r\n    /**\r\n     * Slides to the specified item or page.\r\n     * @param position - The position of the item or page.\r\n     * @param speed - The time in milliseconds for the transition.\r\n     * @param standard - Whether to use the standard behaviour or not. Default meaning false\r\n     */\r\n    to(position, speed, standard) {\r\n        let length;\r\n        if (!standard && this._pages.length) {\r\n            length = this._pages.length;\r\n            this.carouselService.to(this._pages[((position % length) + length) % length].start, speed);\r\n        }\r\n        else {\r\n            this.carouselService.to(position, speed);\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * Moves carousel after user's clicking on any dots\r\n     */\r\n    moveByDot(dotId) {\r\n        const index = this._dotsData.dots.findIndex(dot => dotId === dot.id);\r\n        this.to(index, this.carouselService.settings.dotsSpeed);\r\n    }\r\n    /**\r\n     * rewinds carousel to slide with needed id\r\n     * @param id id of slide\r\n     */\r\n    toSlideById(id) {\r\n        const position = this.carouselService.slidesData.findIndex(slide => slide.id === id && slide.isCloned === false);\r\n        if (position === -1 || position === this.carouselService.current()) {\r\n            return;\r\n        }\r\n        this.carouselService.to(this.carouselService.relative(position), false);\r\n    }\r\n};\nNavigationService.ɵfac = function NavigationService_Factory(t) { return new (t || NavigationService)(ɵngcc0.ɵɵinject(CarouselService)); };\nNavigationService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NavigationService, factory: function (t) { return NavigationService.ɵfac(t); } });\r\nNavigationService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n\n// import { Injectable } from '@angular/core';\r\n/**\r\n * Create a new injection token for injecting the window into a component.\r\n */\r\nconst WINDOW = new InjectionToken('WindowToken');\r\n/**\r\n * Define abstract class for obtaining reference to the global window object.\r\n */\r\nclass WindowRef {\r\n    get nativeWindow() {\r\n        throw new Error('Not implemented.');\r\n    }\r\n}\r\n/**\r\n * Define class that implements the abstract class and returns the native window object.\r\n */\r\nlet BrowserWindowRef = class BrowserWindowRef extends WindowRef {\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * @returns window object\r\n     */\r\n    get nativeWindow() {\r\n        return window;\r\n    }\r\n};\nBrowserWindowRef.ɵfac = function BrowserWindowRef_Factory(t) { return new (t || BrowserWindowRef)(); };\nBrowserWindowRef.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BrowserWindowRef, factory: function (t) { return BrowserWindowRef.ɵfac(t); } });\r\n/**\r\n * Create an factory function that returns the native window object.\r\n * @param browserWindowRef Native window object\r\n * @param platformId id of platform\r\n * @returns type of platform of empty object\r\n */\r\nfunction windowFactory(browserWindowRef, platformId) {\r\n    if (isPlatformBrowser(platformId)) {\r\n        return browserWindowRef.nativeWindow;\r\n    }\r\n    const obj = {\r\n        setTimeout: (func, time) => { },\r\n        clearTimeout: (a) => { }\r\n    };\r\n    return obj;\r\n}\r\n/**\r\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\r\n */\r\nconst browserWindowProvider = {\r\n    provide: WindowRef,\r\n    useClass: BrowserWindowRef\r\n};\r\n/**\r\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\r\n */\r\nconst windowProvider = {\r\n    provide: WINDOW,\r\n    useFactory: windowFactory,\r\n    deps: [WindowRef, PLATFORM_ID]\r\n};\r\n/**\r\n * Create an array of providers.\r\n */\r\nconst WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];\n\n/**\r\n * Create a new injection token for injecting the Document into a component.\r\n */\r\nconst DOCUMENT = new InjectionToken('DocumentToken');\r\n/**\r\n * Define abstract class for obtaining reference to the global Document object.\r\n */\r\nclass DocumentRef {\r\n    get nativeDocument() {\r\n        throw new Error('Not implemented.');\r\n    }\r\n}\r\n/**\r\n * Define class that implements the abstract class and returns the native Document object.\r\n */\r\nlet BrowserDocumentRef = class BrowserDocumentRef extends DocumentRef {\r\n    constructor() {\r\n        super();\r\n    }\r\n    /**\r\n     * @returns Document object\r\n     */\r\n    get nativeDocument() {\r\n        return document;\r\n    }\r\n};\nBrowserDocumentRef.ɵfac = function BrowserDocumentRef_Factory(t) { return new (t || BrowserDocumentRef)(); };\nBrowserDocumentRef.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BrowserDocumentRef, factory: function (t) { return BrowserDocumentRef.ɵfac(t); } });\r\n/**\r\n * Create an factory function that returns the native Document object.\r\n * @param browserDocumentRef Native Document object\r\n * @param platformId id of platform\r\n * @returns type of platform of empty object\r\n */\r\nfunction documentFactory(browserDocumentRef, platformId) {\r\n    if (isPlatformBrowser(platformId)) {\r\n        return browserDocumentRef.nativeDocument;\r\n    }\r\n    const doc = {\r\n        hidden: false,\r\n        visibilityState: 'visible'\r\n    };\r\n    return doc;\r\n}\r\n/**\r\n * Create a injectable provider for the DocumentRef token that uses the BrowserDocumentRef class.\r\n */\r\nconst browserDocumentProvider = {\r\n    provide: DocumentRef,\r\n    useClass: BrowserDocumentRef\r\n};\r\n/**\r\n * Create an injectable provider that uses the DocumentFactory function for returning the native Document object.\r\n */\r\nconst documentProvider = {\r\n    provide: DOCUMENT,\r\n    useFactory: documentFactory,\r\n    deps: [DocumentRef, PLATFORM_ID]\r\n};\r\n/**\r\n * Create an array of providers.\r\n */\r\nconst DOCUMENT_PROVIDERS = [browserDocumentProvider, documentProvider];\n\nlet AutoplayService = class AutoplayService {\r\n    constructor(carouselService, winRef, docRef) {\r\n        this.carouselService = carouselService;\r\n        /**\r\n         * The autoplay timeout.\r\n         */\r\n        this._timeout = null;\r\n        /**\r\n         * Indicates whenever the autoplay is paused.\r\n         */\r\n        this._paused = false;\r\n        this.winRef = winRef;\r\n        this.docRef = docRef;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.autoplaySubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\r\n            if (this.carouselService.settings.autoplay) {\r\n                this.play();\r\n            }\r\n        }));\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\r\n            this._handleChangeObservable(data);\r\n        }));\r\n        const resized$ = this.carouselService.getResizedState().pipe(tap(() => {\r\n            if (this.carouselService.settings.autoplay) {\r\n                this.play();\r\n            }\r\n            else {\r\n                this.stop();\r\n            }\r\n        }));\r\n        // original Autoplay Plugin has listeners on play.owl.core and stop.owl.core events.\r\n        // They are triggered by Video Plugin\r\n        const autoplayMerge$ = merge(initializedCarousel$, changedSettings$, resized$);\r\n        this.autoplaySubscription = autoplayMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n       * Starts the autoplay.\r\n       * @param timeout The interval before the next animation starts.\r\n       * @param speed The animation speed for the animations.\r\n       */\r\n    play(timeout, speed) {\r\n        if (this._paused) {\r\n            this._paused = false;\r\n            this._setAutoPlayInterval(this.carouselService.settings.autoplayMouseleaveTimeout);\r\n        }\r\n        if (this.carouselService.is('rotating')) {\r\n            return;\r\n        }\r\n        this.carouselService.enter('rotating');\r\n        this._setAutoPlayInterval();\r\n    }\r\n    ;\r\n    /**\r\n       * Gets a new timeout\r\n       * @param timeout - The interval before the next animation starts.\r\n       * @param speed - The animation speed for the animations.\r\n       * @return\r\n       */\r\n    _getNextTimeout(timeout, speed) {\r\n        if (this._timeout) {\r\n            this.winRef.clearTimeout(this._timeout);\r\n        }\r\n        this._isArtificialAutoplayTimeout = timeout ? true : false;\r\n        return this.winRef.setTimeout(() => {\r\n            if (this._paused || this.carouselService.is('busy') || this.carouselService.is('interacting') || this.docRef.hidden) {\r\n                return;\r\n            }\r\n            this.carouselService.next(speed || this.carouselService.settings.autoplaySpeed);\r\n        }, timeout || this.carouselService.settings.autoplayTimeout);\r\n    }\r\n    ;\r\n    /**\r\n       * Sets autoplay in motion.\r\n       */\r\n    _setAutoPlayInterval(timeout) {\r\n        this._timeout = this._getNextTimeout(timeout);\r\n    }\r\n    ;\r\n    /**\r\n     * Stops the autoplay.\r\n     */\r\n    stop() {\r\n        if (!this.carouselService.is('rotating')) {\r\n            return;\r\n        }\r\n        this._paused = true;\r\n        this.winRef.clearTimeout(this._timeout);\r\n        this.carouselService.leave('rotating');\r\n    }\r\n    ;\r\n    /**\r\n       * Stops the autoplay.\r\n       */\r\n    pause() {\r\n        if (!this.carouselService.is('rotating')) {\r\n            return;\r\n        }\r\n        this._paused = true;\r\n    }\r\n    ;\r\n    /**\r\n     * Manages by autoplaying according to data passed by _changedSettingsCarousel$ Obsarvable\r\n     * @param data object with current position of carousel and type of change\r\n     */\r\n    _handleChangeObservable(data) {\r\n        if (data.property.name === 'settings') {\r\n            if (this.carouselService.settings.autoplay) {\r\n                this.play();\r\n            }\r\n            else {\r\n                this.stop();\r\n            }\r\n        }\r\n        else if (data.property.name === 'position') {\r\n            //console.log('play?', e);\r\n            if (this.carouselService.settings.autoplay) {\r\n                this._setAutoPlayInterval();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts autoplaying of the carousel in the case when user leaves the carousel before it starts translateing (moving)\r\n     */\r\n    _playAfterTranslated() {\r\n        of('translated').pipe(switchMap(data => this.carouselService.getTranslatedState()), first(), filter(() => this._isArtificialAutoplayTimeout), tap(() => this._setAutoPlayInterval())).subscribe(() => { });\r\n    }\r\n    /**\r\n     * Starts pausing\r\n     */\r\n    startPausing() {\r\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n            this.pause();\r\n        }\r\n    }\r\n    /**\r\n     * Starts playing after mouse leaves carousel\r\n     */\r\n    startPlayingMouseLeave() {\r\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n            this.play();\r\n            this._playAfterTranslated();\r\n        }\r\n    }\r\n    /**\r\n     * Starts playing after touch ends\r\n     */\r\n    startPlayingTouchEnd() {\r\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\r\n            this.play();\r\n            this._playAfterTranslated();\r\n        }\r\n    }\r\n};\nAutoplayService.ɵfac = function AutoplayService_Factory(t) { return new (t || AutoplayService)(ɵngcc0.ɵɵinject(CarouselService), ɵngcc0.ɵɵinject(WINDOW), ɵngcc0.ɵɵinject(DOCUMENT)); };\nAutoplayService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AutoplayService, factory: function (t) { return AutoplayService.ɵfac(t); } });\r\nAutoplayService.ctorParameters = () => [\r\n    { type: CarouselService },\r\n    { type: undefined, decorators: [{ type: Inject, args: [WINDOW,] }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\nAutoplayService = __decorate([ __param(1, Inject(WINDOW)),\r\n    __param(2, Inject(DOCUMENT))\r\n], AutoplayService);\n\nlet LazyLoadService = class LazyLoadService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.lazyLoadSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\r\n            const isLazyLoad = this.carouselService.settings && !this.carouselService.settings.lazyLoad;\r\n            this.carouselService.slidesData.forEach(item => item.load = isLazyLoad ? true : false);\r\n        }));\r\n        const changeSettings$ = this.carouselService.getChangeState();\r\n        const resizedCarousel$ = this.carouselService.getResizedState();\r\n        const lazyLoadMerge$ = merge(initializedCarousel$, changeSettings$, resizedCarousel$).pipe(tap(data => this._defineLazyLoadSlides(data)));\r\n        this.lazyLoadSubscription = lazyLoadMerge$.subscribe(() => { });\r\n    }\r\n    _defineLazyLoadSlides(data) {\r\n        if (!this.carouselService.settings || !this.carouselService.settings.lazyLoad) {\r\n            return;\r\n        }\r\n        if ((data.property && data.property.name === 'position') || data === 'initialized' || data === \"resized\") {\r\n            const settings = this.carouselService.settings, clones = this.carouselService.clones().length;\r\n            let n = (settings.center && Math.ceil(settings.items / 2) || settings.items), i = ((settings.center && n * -1) || 0), position = (data.property && data.property.value !== undefined ? data.property.value : this.carouselService.current()) + i;\r\n            // load = $.proxy(function(i, v) { this.load(v) }, this);\r\n            //TODO: Need documentation for this new option\r\n            if (settings.lazyLoadEager > 0) {\r\n                n += settings.lazyLoadEager;\r\n                // If the carousel is looping also preload images that are to the \"left\"\r\n                if (settings.loop) {\r\n                    position -= settings.lazyLoadEager;\r\n                    n++;\r\n                }\r\n            }\r\n            while (i++ < n) {\r\n                this._load(clones / 2 + this.carouselService.relative(position));\r\n                if (clones) {\r\n                    this.carouselService.clones(this.carouselService.relative(position)).forEach(value => this._load(value));\r\n                }\r\n                position++;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n       * Loads all resources of an item at the specified position.\r\n       * @param position - The absolute position of the item.\r\n       */\r\n    _load(position) {\r\n        if (this.carouselService.slidesData[position].load) {\r\n            return;\r\n        }\r\n        this.carouselService.slidesData[position].load = true;\r\n    }\r\n};\nLazyLoadService.ɵfac = function LazyLoadService_Factory(t) { return new (t || LazyLoadService)(ɵngcc0.ɵɵinject(CarouselService)); };\nLazyLoadService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LazyLoadService, factory: function (t) { return LazyLoadService.ɵfac(t); } });\r\nLazyLoadService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n\nlet AnimateService = class AnimateService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        /**\r\n         * s\r\n         */\r\n        this.swapping = true;\r\n        /**\r\n         * active slide before translating\r\n         */\r\n        this.previous = undefined;\r\n        /**\r\n         * new active slide after translating\r\n         */\r\n        this.next = undefined;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.animateSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const changeSettings$ = this.carouselService.getChangeState().pipe(tap(data => {\r\n            if (data.property.name === 'position') {\r\n                this.previous = this.carouselService.current();\r\n                this.next = data.property.value;\r\n            }\r\n        }));\r\n        const dragCarousel$ = this.carouselService.getDragState();\r\n        const draggedCarousel$ = this.carouselService.getDraggedState();\r\n        const translatedCarousel$ = this.carouselService.getTranslatedState();\r\n        const dragTranslatedMerge$ = merge(dragCarousel$, draggedCarousel$, translatedCarousel$).pipe(tap(data => this.swapping = data === 'translated'));\r\n        const translateCarousel$ = this.carouselService.getTranslateState().pipe(tap(data => {\r\n            if (this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn)) {\r\n                this._swap();\r\n            }\r\n        }));\r\n        const animateMerge$ = merge(changeSettings$, translateCarousel$, dragTranslatedMerge$).pipe();\r\n        this.animateSubscription = animateMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n       * Toggles the animation classes whenever an translations starts.\r\n       * @returns\r\n       */\r\n    _swap() {\r\n        if (this.carouselService.settings.items !== 1) {\r\n            return;\r\n        }\r\n        // if (!$.support.animation || !$.support.transition) {\r\n        // \treturn;\r\n        // }\r\n        this.carouselService.speed(0);\r\n        let left;\r\n        const previous = this.carouselService.slidesData[this.previous], next = this.carouselService.slidesData[this.next], incoming = this.carouselService.settings.animateIn, outgoing = this.carouselService.settings.animateOut;\r\n        if (this.carouselService.current() === this.previous) {\r\n            return;\r\n        }\r\n        if (outgoing) {\r\n            left = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next);\r\n            this.carouselService.slidesData.forEach(slide => {\r\n                if (slide.id === previous.id) {\r\n                    slide.left = `${left}px`;\r\n                    slide.isAnimated = true;\r\n                    slide.isDefAnimatedOut = true;\r\n                    slide.isCustomAnimatedOut = true;\r\n                }\r\n            });\r\n        }\r\n        if (incoming) {\r\n            this.carouselService.slidesData.forEach(slide => {\r\n                if (slide.id === next.id) {\r\n                    slide.isAnimated = true;\r\n                    slide.isDefAnimatedIn = true;\r\n                    slide.isCustomAnimatedIn = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * Handles the end of 'animationend' event\r\n     * @param id Id of slides\r\n     */\r\n    clear(id) {\r\n        this.carouselService.slidesData.forEach(slide => {\r\n            if (slide.id === id) {\r\n                slide.left = '';\r\n                slide.isAnimated = false;\r\n                slide.isDefAnimatedOut = false;\r\n                slide.isCustomAnimatedOut = false;\r\n                slide.isDefAnimatedIn = false;\r\n                slide.isCustomAnimatedIn = false;\r\n                slide.classes = this.carouselService.setCurSlideClasses(slide);\r\n            }\r\n        });\r\n        this.carouselService.onTransitionEnd();\r\n    }\r\n    ;\r\n};\nAnimateService.ɵfac = function AnimateService_Factory(t) { return new (t || AnimateService)(ɵngcc0.ɵɵinject(CarouselService)); };\nAnimateService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AnimateService, factory: function (t) { return AnimateService.ɵfac(t); } });\r\nAnimateService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n\nlet AutoHeightService = class AutoHeightService {\r\n    constructor(carouselService) {\r\n        this.carouselService = carouselService;\r\n        this.spyDataStreams();\r\n    }\r\n    ngOnDestroy() {\r\n        this.autoHeightSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.autoHeight) {\r\n                this.update();\r\n            }\r\n            else {\r\n                this.carouselService.slidesData.forEach(slide => slide.heightState = 'full');\r\n            }\r\n        }));\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.autoHeight && data.property.name === 'position') {\r\n                this.update();\r\n            }\r\n        }));\r\n        const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.autoHeight) {\r\n                this.update();\r\n            }\r\n        }));\r\n        const autoHeight$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\r\n        this.autoHeightSubscription = autoHeight$.subscribe(() => { });\r\n    }\r\n    /**\r\n     * Updates the prop 'heightState' of slides\r\n     */\r\n    update() {\r\n        const items = this.carouselService.settings.items;\r\n        let start = this.carouselService.current(), end = start + items;\r\n        if (this.carouselService.settings.center) {\r\n            start = items % 2 === 1 ? start - (items - 1) / 2 : start - items / 2;\r\n            end = items % 2 === 1 ? start + items : start + items + 1;\r\n        }\r\n        this.carouselService.slidesData.forEach((slide, i) => {\r\n            slide.heightState = (i >= start && i < end) ? 'full' : 'nulled';\r\n        });\r\n    }\r\n};\nAutoHeightService.ɵfac = function AutoHeightService_Factory(t) { return new (t || AutoHeightService)(ɵngcc0.ɵɵinject(CarouselService)); };\nAutoHeightService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AutoHeightService, factory: function (t) { return AutoHeightService.ɵfac(t); } });\r\nAutoHeightService.ctorParameters = () => [\r\n    { type: CarouselService }\r\n];\n\nlet HashService = class HashService {\r\n    constructor(carouselService, route, router) {\r\n        this.carouselService = carouselService;\r\n        this.route = route;\r\n        this.router = router;\r\n        this.spyDataStreams();\r\n        if (!this.route) {\r\n            this.route = {\r\n                fragment: of('no route').pipe(take(1))\r\n            };\r\n        }\r\n        ;\r\n        if (!this.router) {\r\n            this.router = {\r\n                navigate: (commands, extras) => { return; }\r\n            };\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.hashSubscription.unsubscribe();\r\n    }\r\n    /**\r\n     * Defines Observables which service must observe\r\n     */\r\n    spyDataStreams() {\r\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => this.listenToRoute()));\r\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\r\n            if (this.carouselService.settings.URLhashListener && data.property.name === 'position') {\r\n                const newCurSlide = this.carouselService.current();\r\n                const newCurFragment = this.carouselService.slidesData[newCurSlide].hashFragment;\r\n                if (!newCurFragment || newCurFragment === this.currentHashFragment) {\r\n                    return;\r\n                }\r\n                this.router.navigate(['./'], { fragment: newCurFragment, relativeTo: this.route });\r\n            }\r\n        }));\r\n        const hashFragment$ = merge(initializedCarousel$, changedSettings$);\r\n        this.hashSubscription = hashFragment$.subscribe(() => { });\r\n    }\r\n    /**\r\n     * rewinds carousel to slide which has the same hashFragment as fragment of current url\r\n     * @param fragment fragment of url\r\n     */\r\n    rewind(fragment) {\r\n        const position = this.carouselService.slidesData.findIndex(slide => slide.hashFragment === fragment && slide.isCloned === false);\r\n        if (position === -1 || position === this.carouselService.current()) {\r\n            return;\r\n        }\r\n        this.carouselService.to(this.carouselService.relative(position), false);\r\n    }\r\n    /**\r\n     * Initiate listening to ActivatedRoute.fragment\r\n     */\r\n    listenToRoute() {\r\n        const count = this.carouselService.settings.startPosition === 'URLHash' ? 0 : 2;\r\n        this.route.fragment.pipe(skip(count))\r\n            .subscribe(fragment => {\r\n            this.currentHashFragment = fragment;\r\n            this.rewind(fragment);\r\n        });\r\n    }\r\n};\nHashService.ɵfac = function HashService_Factory(t) { return new (t || HashService)(ɵngcc0.ɵɵinject(CarouselService), ɵngcc0.ɵɵinject(ɵngcc2.ActivatedRoute, 8), ɵngcc0.ɵɵinject(ɵngcc2.Router, 8)); };\nHashService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HashService, factory: function (t) { return HashService.ɵfac(t); } });\r\nHashService.ctorParameters = () => [\r\n    { type: CarouselService },\r\n    { type: ActivatedRoute, decorators: [{ type: Optional }] },\r\n    { type: Router, decorators: [{ type: Optional }] }\r\n];\r\nHashService = __decorate([ __param(1, Optional()),\r\n    __param(2, Optional())\r\n], HashService);\n\nlet nextId = 0;\r\nlet CarouselSlideDirective = class CarouselSlideDirective {\r\n    constructor(tplRef) {\r\n        this.tplRef = tplRef;\r\n        /**\r\n         * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\r\n         * Will be auto-generated if not provided.\r\n         */\r\n        this.id = `owl-slide-${nextId++}`;\r\n        /**\r\n         * Defines how much widths of common slide will current slide have\r\n         * e.g. if _mergeData=2, the slide will twice wider then slides with _mergeData=1\r\n         */\r\n        this._dataMerge = 1;\r\n        /**\r\n         * Width of slide\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Inner content of dot for certain slide; can be html-markup\r\n         */\r\n        this.dotContent = '';\r\n        /**\r\n         * Hash (fragment) of url which corresponds to certain slide\r\n         */\r\n        this.dataHash = '';\r\n    }\r\n    set dataMerge(data) {\r\n        this._dataMerge = this.isNumeric(data) ? data : 1;\r\n    }\r\n    ;\r\n    get dataMerge() { return this._dataMerge; }\r\n    /**\r\n       * Determines if the input is a Number or something that can be coerced to a Number\r\n       * @param - The input to be tested\r\n       * @returns - An indication if the input is a Number or can be coerced to a Number\r\n       */\r\n    isNumeric(number) {\r\n        return !isNaN(parseFloat(number));\r\n    }\r\n};\nCarouselSlideDirective.ɵfac = function CarouselSlideDirective_Factory(t) { return new (t || CarouselSlideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCarouselSlideDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CarouselSlideDirective, selectors: [[\"ng-template\", \"carouselSlide\", \"\"]], inputs: { id: \"id\", width: \"width\", dotContent: \"dotContent\", dataHash: \"dataHash\", dataMerge: \"dataMerge\" } });\r\nCarouselSlideDirective.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n__decorate([\r\n    Input()\r\n], CarouselSlideDirective.prototype, \"id\", void 0);\r\n__decorate([\r\n    Input()\r\n], CarouselSlideDirective.prototype, \"dataMerge\", null);\r\n__decorate([\r\n    Input()\r\n], CarouselSlideDirective.prototype, \"width\", void 0);\r\n__decorate([\r\n    Input()\r\n], CarouselSlideDirective.prototype, \"dotContent\", void 0);\r\n__decorate([\r\n    Input()\r\n], CarouselSlideDirective.prototype, \"dataHash\", void 0);\r\n/**\r\n * Data which will be passed out after ending of transition of carousel\r\n */\r\nclass SlidesOutputData {\r\n}\r\n;\r\nlet CarouselComponent = class CarouselComponent {\r\n    constructor(el, resizeService, carouselService, navigationService, autoplayService, lazyLoadService, animateService, autoHeightService, hashService, logger, changeDetectorRef, docRef) {\r\n        this.el = el;\r\n        this.resizeService = resizeService;\r\n        this.carouselService = carouselService;\r\n        this.navigationService = navigationService;\r\n        this.autoplayService = autoplayService;\r\n        this.lazyLoadService = lazyLoadService;\r\n        this.animateService = animateService;\r\n        this.autoHeightService = autoHeightService;\r\n        this.hashService = hashService;\r\n        this.logger = logger;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.translated = new EventEmitter();\r\n        this.dragging = new EventEmitter();\r\n        this.change = new EventEmitter();\r\n        this.changed = new EventEmitter();\r\n        this.initialized = new EventEmitter();\r\n        /**\r\n           *  Data of every slide\r\n           */\r\n        this.slidesData = [];\r\n        /**\r\n         * Shows whether carousel is loaded of not.\r\n         */\r\n        this.carouselLoaded = false;\r\n        this.docRef = docRef;\r\n    }\r\n    onVisibilityChange(ev) {\r\n        if (!this.carouselService.settings.autoplay)\r\n            return;\r\n        switch (this.docRef.visibilityState) {\r\n            case 'visible':\r\n                this.autoplayService.play();\r\n                break;\r\n            case 'hidden':\r\n                this.autoplayService.stop();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        this.spyDataStreams();\r\n        this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\r\n    }\r\n    ngAfterContentChecked() {\r\n    }\r\n    // ngAfterContentChecked() END\r\n    ngAfterContentInit() {\r\n        if (this.slides.toArray().length) {\r\n            this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\r\n            this.carouselService.initialize(this.slides.toArray());\r\n            this._winResizeWatcher();\r\n        }\r\n        else {\r\n            this.logger.log(`There are no slides to show. So the carousel won't be rendered`);\r\n        }\r\n        this._slidesChangesSubscription = this.slides.changes.pipe(tap((slides) => {\r\n            if (slides.toArray().length) {\r\n                // this.carouselService.setItems(slides.toArray());\r\n                this.carouselService.setup(this.carouselWindowWidth, slides.toArray(), this.options);\r\n                this.carouselService.initialize(slides.toArray());\r\n            }\r\n            else {\r\n                this.carouselLoaded = false;\r\n                this.logger.log(`There are no slides to show. So the carousel won't be re-rendered`);\r\n            }\r\n        })).subscribe(() => { });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.resizeSubscription) {\r\n            this.resizeSubscription.unsubscribe();\r\n        }\r\n        if (this._slidesChangesSubscription) {\r\n            this._slidesChangesSubscription.unsubscribe();\r\n        }\r\n        if (this._allObservSubscription) {\r\n            this._allObservSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Joins the observable login in one place: sets values to some observables, merges this observables and\r\n     * subcribes to merge func\r\n     */\r\n    spyDataStreams() {\r\n        this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(tap(data => {\r\n            this.owlDOMData = data.owlDOMData;\r\n            this.stageData = data.stageData;\r\n            this.slidesData = data.slidesData;\r\n            if (!this.carouselLoaded) {\r\n                this.carouselLoaded = true;\r\n            }\r\n            this.navData = data.navData;\r\n            this.dotsData = data.dotsData;\r\n            this.changeDetectorRef.markForCheck();\r\n        }));\r\n        this._initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.initialized.emit(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.translated.emit(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._changeCarousel$ = this.carouselService.getChangeState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.change.emit(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._changedCarousel$ = this.carouselService.getChangeState().pipe(switchMap(value => {\r\n            const changedPosition = of(value).pipe(filter(() => value.property.name === 'position'), switchMap(() => from(this.slidesData)), skip(value.property.value), take(this.carouselService.settings.items), map(slide => {\r\n                const clonedIdPrefix = this.carouselService.clonedIdPrefix;\r\n                const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\r\n                return Object.assign(Object.assign({}, slide), { id: id, isActive: true });\r\n            }), toArray(), map(slides => {\r\n                return {\r\n                    slides: slides,\r\n                    startPosition: this.carouselService.relative(value.property.value)\r\n                };\r\n            }));\r\n            // const changedSetting: Observable<SlidesOutputData> = of(value).pipe(\r\n            //   filter(() => value.property.name === 'settings'),\r\n            //   map(() => {\r\n            //     return {\r\n            //       slides: [],\r\n            //       startPosition: this.carouselService.relative(value.property.value)\r\n            //     }\r\n            //   })\r\n            // )\r\n            return merge(changedPosition);\r\n        }), tap(slidesData => {\r\n            this.gatherTranslatedData();\r\n            this.changed.emit(slidesData.slides.length ? slidesData : this.slidesOutputData);\r\n            // console.log(this.slidesOutputData);\r\n            // this.slidesOutputData = {};\r\n        }));\r\n        this._draggingCarousel$ = this.carouselService.getDragState().pipe(tap(() => {\r\n            this.gatherTranslatedData();\r\n            this.dragging.emit({ dragging: true, data: this.slidesOutputData });\r\n        }), switchMap(() => this.carouselService.getDraggedState().pipe(map(() => !!this.carouselService.is('animating')))), switchMap(anim => {\r\n            if (anim) {\r\n                return this.carouselService.getTranslatedState().pipe(first());\r\n            }\r\n            else {\r\n                return of('not animating');\r\n            }\r\n        }), tap(() => {\r\n            this.dragging.emit({ dragging: false, data: this.slidesOutputData });\r\n        }));\r\n        this._carouselMerge$ = merge(this._viewCurSettings$, this._translatedCarousel$, this._draggingCarousel$, this._changeCarousel$, this._changedCarousel$, this._initializedCarousel$);\r\n        this._allObservSubscription = this._carouselMerge$.subscribe(() => { });\r\n    }\r\n    /**\r\n     * Init subscription to resize event and attaches handler for this event\r\n     */\r\n    _winResizeWatcher() {\r\n        if (Object.keys(this.carouselService._options.responsive).length) {\r\n            this.resizeSubscription = this.resizeService.onResize$\r\n                .pipe(filter(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector('.owl-carousel').clientWidth), delay(this.carouselService.settings.responsiveRefreshRate))\r\n                .subscribe(() => {\r\n                this.carouselService.onResize(this.el.nativeElement.querySelector('.owl-carousel').clientWidth);\r\n                this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Handler for transitioend event\r\n     */\r\n    onTransitionEnd() {\r\n        this.carouselService.onTransitionEnd();\r\n    }\r\n    /**\r\n     * Handler for click event, attached to next button\r\n     */\r\n    next() {\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.next(this.carouselService.settings.navSpeed);\r\n    }\r\n    /**\r\n     * Handler for click event, attached to prev button\r\n     */\r\n    prev() {\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.prev(this.carouselService.settings.navSpeed);\r\n    }\r\n    /**\r\n     * Handler for click event, attached to dots\r\n     */\r\n    moveByDot(dotId) {\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.moveByDot(dotId);\r\n    }\r\n    /**\r\n     * rewinds carousel to slide with needed id\r\n     * @param id fragment of url\r\n     */\r\n    to(id) {\r\n        // if (!this.carouselLoaded || ((this.navData && this.navData.disabled) && (this.dotsData && this.dotsData.disabled))) return;\r\n        if (!this.carouselLoaded)\r\n            return;\r\n        this.navigationService.toSlideById(id);\r\n    }\r\n    /**\r\n     * Gathers and prepares data intended for passing to the user by means of firing event translatedCarousel\r\n     */\r\n    gatherTranslatedData() {\r\n        let startPosition;\r\n        const clonedIdPrefix = this.carouselService.clonedIdPrefix;\r\n        const activeSlides = this.slidesData\r\n            .filter(slide => slide.isActive === true)\r\n            .map(slide => {\r\n            const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\r\n            return {\r\n                id: id,\r\n                width: slide.width,\r\n                marginL: slide.marginL,\r\n                marginR: slide.marginR,\r\n                center: slide.isCentered\r\n            };\r\n        });\r\n        startPosition = this.carouselService.relative(this.carouselService.current());\r\n        this.slidesOutputData = {\r\n            startPosition: startPosition,\r\n            slides: activeSlides\r\n        };\r\n    }\r\n    /**\r\n     * Starts pausing\r\n     */\r\n    startPausing() {\r\n        this.autoplayService.startPausing();\r\n    }\r\n    /**\r\n     * Starts playing after mouse leaves carousel\r\n     */\r\n    startPlayML() {\r\n        this.autoplayService.startPlayingMouseLeave();\r\n    }\r\n    /**\r\n     * Starts playing after touch ends\r\n     */\r\n    startPlayTE() {\r\n        this.autoplayService.startPlayingTouchEnd();\r\n    }\r\n};\nCarouselComponent.ɵfac = function CarouselComponent_Factory(t) { return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ResizeService), ɵngcc0.ɵɵdirectiveInject(CarouselService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(AutoplayService), ɵngcc0.ɵɵdirectiveInject(LazyLoadService), ɵngcc0.ɵɵdirectiveInject(AnimateService), ɵngcc0.ɵɵdirectiveInject(AutoHeightService), ɵngcc0.ɵɵdirectiveInject(HashService), ɵngcc0.ɵɵdirectiveInject(OwlLogger), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCarouselComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CarouselComponent, selectors: [[\"owl-carousel-o\"]], contentQueries: function CarouselComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CarouselSlideDirective, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    } }, hostBindings: function CarouselComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"visibilitychange\", function CarouselComponent_visibilitychange_HostBindingHandler($event) { return ctx.onVisibilityChange($event); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, inputs: { options: \"options\" }, outputs: { translated: \"translated\", dragging: \"dragging\", change: \"change\", changed: \"changed\", initialized: \"initialized\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            NavigationService,\n            AutoplayService,\n            CarouselService,\n            LazyLoadService,\n            AnimateService,\n            AutoHeightService,\n            HashService\n        ])], decls: 4, vars: 9, consts: [[1, \"owl-carousel\", \"owl-theme\", 3, \"ngClass\", \"mouseover\", \"mouseleave\", \"touchstart\", \"touchend\"], [\"owlCarousel\", \"\"], [\"class\", \"owl-stage-outer\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"owl-stage-outer\"], [3, \"owlDraggable\", \"stageData\", \"slidesData\"], [1, \"owl-nav\", 3, \"ngClass\"], [1, \"owl-prev\", 3, \"ngClass\", \"innerHTML\", \"click\"], [1, \"owl-next\", 3, \"ngClass\", \"innerHTML\", \"click\"], [1, \"owl-dots\", 3, \"ngClass\"], [\"class\", \"owl-dot\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"owl-dot\", 3, \"ngClass\", \"click\"], [3, \"innerHTML\"]], template: function CarouselComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"mouseover\", function CarouselComponent_Template_div_mouseover_0_listener() { return ctx.startPausing(); })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() { return ctx.startPlayML(); })(\"touchstart\", function CarouselComponent_Template_div_touchstart_0_listener() { return ctx.startPausing(); })(\"touchend\", function CarouselComponent_Template_div_touchend_0_listener() { return ctx.startPlayTE(); });\n        ɵngcc0.ɵɵtemplate(2, CarouselComponent_div_2_Template, 2, 6, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, CarouselComponent_ng_container_3_Template, 6, 15, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction5(3, _c3, ctx.owlDOMData == null ? null : ctx.owlDOMData.rtl, ctx.owlDOMData == null ? null : ctx.owlDOMData.isLoaded, ctx.owlDOMData == null ? null : ctx.owlDOMData.isResponsive, ctx.owlDOMData == null ? null : ctx.owlDOMData.isMouseDragable, ctx.owlDOMData == null ? null : ctx.owlDOMData.isGrab));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.carouselLoaded);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.toArray().length);\n    } }, directives: function () { return [ɵngcc3.NgClass, ɵngcc3.NgIf, StageComponent, ɵngcc3.NgForOf]; }, styles: [\".owl-theme[_ngcontent-%COMP%] { display: block; }\"] });\r\nCarouselComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ResizeService },\r\n    { type: CarouselService },\r\n    { type: NavigationService },\r\n    { type: AutoplayService },\r\n    { type: LazyLoadService },\r\n    { type: AnimateService },\r\n    { type: AutoHeightService },\r\n    { type: HashService },\r\n    { type: OwlLogger },\r\n    { type: ChangeDetectorRef },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n__decorate([\r\n    ContentChildren(CarouselSlideDirective)\r\n], CarouselComponent.prototype, \"slides\", void 0);\r\n__decorate([\r\n    Output()\r\n], CarouselComponent.prototype, \"translated\", void 0);\r\n__decorate([\r\n    Output()\r\n], CarouselComponent.prototype, \"dragging\", void 0);\r\n__decorate([\r\n    Output()\r\n], CarouselComponent.prototype, \"change\", void 0);\r\n__decorate([\r\n    Output()\r\n], CarouselComponent.prototype, \"changed\", void 0);\r\n__decorate([\r\n    Output()\r\n], CarouselComponent.prototype, \"initialized\", void 0);\r\n__decorate([\r\n    Input()\r\n], CarouselComponent.prototype, \"options\", void 0);\r\n__decorate([\r\n    HostListener('document:visibilitychange', ['$event'])\r\n], CarouselComponent.prototype, \"onVisibilityChange\", null);\r\nCarouselComponent = __decorate([ __param(11, Inject(DOCUMENT))\r\n], CarouselComponent);\n\nlet StageComponent = class StageComponent {\r\n    constructor(zone, el, renderer, carouselService, animateService) {\r\n        this.zone = zone;\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.carouselService = carouselService;\r\n        this.animateService = animateService;\r\n        /**\r\n         * Object with data needed for dragging\r\n         */\r\n        this._drag = {\r\n            time: null,\r\n            target: null,\r\n            pointer: null,\r\n            stage: {\r\n                start: null,\r\n                current: null\r\n            },\r\n            direction: null,\r\n            active: false,\r\n            moving: false\r\n        };\r\n        /**\r\n         * Subject for notification when the carousel's rebuilding caused by resize event starts\r\n         */\r\n        this._oneDragMove$ = new Subject();\r\n        /**\r\n         * Passes this to _oneMouseTouchMove();\r\n         */\r\n        this.bindOneMouseTouchMove = (ev) => {\r\n            this._oneMouseTouchMove(ev);\r\n        };\r\n        /**\r\n         * Passes this to _onDragMove();\r\n         */\r\n        this.bindOnDragMove = (ev) => {\r\n            this._onDragMove(ev);\r\n        };\r\n        /**\r\n         * Passes this to _onDragMove();\r\n         */\r\n        this.bindOnDragEnd = (ev) => {\r\n            // this.zone.run(() => {\r\n            this._onDragEnd(ev);\r\n            // });\r\n        };\r\n        /**\r\n         * Attaches handler for 'click' event on any element in .owl-stage in order to prevent dragging when moving of cursor is less than 3px\r\n         */\r\n        this._oneClickHandler = () => {\r\n            this.listenerOneClick = this.renderer.listen(this._drag.target, 'click', () => false);\r\n            this.listenerOneClick();\r\n        };\r\n    }\r\n    onMouseDown(event) {\r\n        if (this.owlDraggable.isMouseDragable) {\r\n            this._onDragStart(event);\r\n        }\r\n    }\r\n    onTouchStart(event) {\r\n        if (this.owlDraggable.isTouchDragable) {\r\n            this._onDragStart(event);\r\n        }\r\n    }\r\n    onTouchCancel(event) {\r\n        this._onDragEnd(event);\r\n    }\r\n    onDragStart() {\r\n        if (this.owlDraggable.isMouseDragable) {\r\n            return false;\r\n        }\r\n    }\r\n    onSelectStart() {\r\n        if (this.owlDraggable.isMouseDragable) {\r\n            return false;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this._oneMoveSubsription = this._oneDragMove$\r\n            .pipe(first())\r\n            .subscribe(() => {\r\n            this._sendChanges();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._oneMoveSubsription.unsubscribe();\r\n    }\r\n    /**\r\n       * Handles `touchstart` and `mousedown` events.\r\n       * @todo Horizontal swipe threshold as option\r\n       * @todo #261\r\n       * @param event - The event arguments.\r\n       */\r\n    _onDragStart(event) {\r\n        let stage = null;\r\n        if (event.which === 3) {\r\n            return;\r\n        }\r\n        stage = this._prepareDragging(event);\r\n        this._drag.time = new Date().getTime();\r\n        this._drag.target = event.target;\r\n        this._drag.stage.start = stage;\r\n        this._drag.stage.current = stage;\r\n        this._drag.pointer = this._pointer(event);\r\n        this.listenerMouseUp = this.renderer.listen(document, 'mouseup', this.bindOnDragEnd);\r\n        this.listenerTouchEnd = this.renderer.listen(document, 'touchend', this.bindOnDragEnd);\r\n        this.zone.runOutsideAngular(() => {\r\n            this.listenerOneMouseMove = this.renderer.listen(document, 'mousemove', this.bindOneMouseTouchMove);\r\n            this.listenerOneTouchMove = this.renderer.listen(document, 'touchmove', this.bindOneMouseTouchMove);\r\n        });\r\n    }\r\n    /**\r\n     * Attaches listeners to `touchmove` and `mousemove` events; initiates updating carousel after starting dragging\r\n     * @param event event objech of mouse or touch event\r\n     */\r\n    _oneMouseTouchMove(event) {\r\n        const delta = this._difference(this._drag.pointer, this._pointer(event));\r\n        if (this.listenerATag) {\r\n            this.listenerATag();\r\n        }\r\n        if (Math.abs(delta.x) < 3 && Math.abs(delta.y) < 3 && this._is('valid')) {\r\n            return;\r\n        }\r\n        if ((Math.abs(delta.x) < 3 && Math.abs(delta.x) < Math.abs(delta.y)) && this._is('valid')) {\r\n            return;\r\n        }\r\n        this.listenerOneMouseMove();\r\n        this.listenerOneTouchMove();\r\n        this._drag.moving = true;\r\n        this.blockClickAnchorInDragging(event);\r\n        this.listenerMouseMove = this.renderer.listen(document, 'mousemove', this.bindOnDragMove);\r\n        this.listenerTouchMove = this.renderer.listen(document, 'touchmove', this.bindOnDragMove);\r\n        event.preventDefault();\r\n        this._enterDragging();\r\n        this._oneDragMove$.next(event);\r\n        // this._sendChanges();\r\n    }\r\n    /**\r\n     * Attaches handler to HTMLAnchorElement for preventing click while carousel is being dragged\r\n     * @param event event object\r\n     */\r\n    blockClickAnchorInDragging(event) {\r\n        let target = event.target;\r\n        while (target && !(target instanceof HTMLAnchorElement)) {\r\n            target = target.parentElement;\r\n        }\r\n        if (target instanceof HTMLAnchorElement) {\r\n            this.listenerATag = this.renderer.listen(target, 'click', () => false);\r\n        }\r\n    }\r\n    /**\r\n     * Handles the `touchmove` and `mousemove` events.\r\n     * @todo #261\r\n     * @param event - The event arguments.\r\n     */\r\n    _onDragMove(event) {\r\n        let stage;\r\n        const stageOrExit = this.carouselService.defineNewCoordsDrag(event, this._drag);\r\n        if (stageOrExit === false) {\r\n            return;\r\n        }\r\n        stage = stageOrExit;\r\n        event.preventDefault();\r\n        this._drag.stage.current = stage;\r\n        this._animate(stage.x - this._drag.stage.start.x);\r\n    }\r\n    ;\r\n    /**\r\n     * Moves .owl-stage left-right\r\n     * @param coordinate coordinate to be set to .owl-stage\r\n     */\r\n    _animate(coordinate) {\r\n        this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', `translate3d(${coordinate}px,0px,0px`);\r\n        this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', '0s');\r\n    }\r\n    /**\r\n       * Handles the `touchend` and `mouseup` events.\r\n       * @todo #261\r\n       * @todo Threshold for click event\r\n       * @param event - The event arguments.\r\n       */\r\n    _onDragEnd(event) {\r\n        this.carouselService.owlDOMData.isGrab = false;\r\n        this.listenerOneMouseMove();\r\n        this.listenerOneTouchMove();\r\n        if (this._drag.moving) {\r\n            this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', ``);\r\n            this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed) / 1000 + 's');\r\n            this._finishDragging(event);\r\n            this.listenerMouseMove();\r\n            this.listenerTouchMove();\r\n        }\r\n        this._drag = {\r\n            time: null,\r\n            target: null,\r\n            pointer: null,\r\n            stage: {\r\n                start: null,\r\n                current: null\r\n            },\r\n            direction: null,\r\n            active: false,\r\n            moving: false\r\n        };\r\n        // this.carouselService.trigger('dragged');\r\n        this.listenerMouseUp();\r\n        this.listenerTouchEnd();\r\n    }\r\n    ;\r\n    /**\r\n       * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\r\n       * @param event - The event arguments.\r\n       * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\r\n       */\r\n    _prepareDragging(event) {\r\n        return this.carouselService.prepareDragging(event);\r\n    }\r\n    /**\r\n     * Finishes dragging\r\n     * @param event object event of 'mouseUp' of 'touchend' events\r\n     */\r\n    _finishDragging(event) {\r\n        this.carouselService.finishDragging(event, this._drag, this._oneClickHandler);\r\n    }\r\n    /**\r\n       * Gets unified pointer coordinates from event.\r\n       * @param event The `mousedown` or `touchstart` event.\r\n       * @returns Contains `x` and `y` coordinates of current pointer position.\r\n       */\r\n    _pointer(event) {\r\n        return this.carouselService.pointer(event);\r\n    }\r\n    /**\r\n       * Gets the difference of two vectors.\r\n       * @param first The first vector.\r\n       * @param second- The second vector.\r\n       * @returns The difference.\r\n       */\r\n    _difference(firstC, second) {\r\n        return this.carouselService.difference(firstC, second);\r\n    }\r\n    /**\r\n       * Checks whether the carousel is in a specific state or not.\r\n       * @param specificState The state to check.\r\n       * @returns The flag which indicates if the carousel is busy.\r\n       */\r\n    _is(specificState) {\r\n        return this.carouselService.is(specificState);\r\n    }\r\n    /**\r\n    * Enters a state.\r\n    * @param name The state name.\r\n    */\r\n    _enter(name) {\r\n        this.carouselService.enter(name);\r\n    }\r\n    /**\r\n       * Sends all data needed for View.\r\n       */\r\n    _sendChanges() {\r\n        this.carouselService.sendChanges();\r\n    }\r\n    /**\r\n     * Handler for transitioend event\r\n     */\r\n    onTransitionEnd() {\r\n        this.carouselService.onTransitionEnd();\r\n    }\r\n    /**\r\n       * Enters into a 'dragging' state\r\n       */\r\n    _enterDragging() {\r\n        this.carouselService.enterDragging();\r\n    }\r\n    /**\r\n     * Handles the end of 'animationend' event\r\n     * @param id Id of slides\r\n     */\r\n    clear(id) {\r\n        this.animateService.clear(id);\r\n    }\r\n};\nStageComponent.ɵfac = function StageComponent_Factory(t) { return new (t || StageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(CarouselService), ɵngcc0.ɵɵdirectiveInject(AnimateService)); };\nStageComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StageComponent, selectors: [[\"owl-stage\"]], hostBindings: function StageComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function StageComponent_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); })(\"touchstart\", function StageComponent_touchstart_HostBindingHandler($event) { return ctx.onTouchStart($event); })(\"touchcancel\", function StageComponent_touchcancel_HostBindingHandler($event) { return ctx.onTouchCancel($event); })(\"dragstart\", function StageComponent_dragstart_HostBindingHandler() { return ctx.onDragStart(); })(\"selectstart\", function StageComponent_selectstart_HostBindingHandler() { return ctx.onSelectStart(); });\n    } }, inputs: { owlDraggable: \"owlDraggable\", stageData: \"stageData\", slidesData: \"slidesData\" }, decls: 3, vars: 8, consts: [[1, \"owl-stage\", 3, \"ngStyle\", \"transitionend\"], [4, \"ngFor\", \"ngForOf\"], [1, \"owl-item\", 3, \"ngClass\", \"ngStyle\", \"animationend\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\"]], template: function StageComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"transitionend\", function StageComponent_Template_div_transitionend_1_listener() { return ctx.onTransitionEnd(); });\n        ɵngcc0.ɵɵtemplate(2, StageComponent_ng_container_2_Template, 3, 9, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction5(2, _c5, ctx.stageData.width + \"px\", ctx.stageData.transform, ctx.stageData.transition, ctx.stageData.paddingL ? ctx.stageData.paddingL + \"px\" : \"\", ctx.stageData.paddingR ? ctx.stageData.paddingR + \"px\" : \"\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slidesData);\n    } }, directives: [ɵngcc3.NgStyle, ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], encapsulation: 2, data: { animation: [\n            trigger('autoHeight', [\n                state('nulled', style({ height: 0 })),\n                state('full', style({ height: '*' })),\n                transition('full => nulled', [\n                    // style({height: '*'}),\n                    animate('700ms 350ms')\n                ]),\n                transition('nulled => full', [\n                    // style({height: 0}),\n                    animate(350)\n                ]),\n            ])\n        ] } });\r\nStageComponent.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: CarouselService },\r\n    { type: AnimateService }\r\n];\r\n__decorate([\r\n    Input()\r\n], StageComponent.prototype, \"owlDraggable\", void 0);\r\n__decorate([\r\n    Input()\r\n], StageComponent.prototype, \"stageData\", void 0);\r\n__decorate([\r\n    Input()\r\n], StageComponent.prototype, \"slidesData\", void 0);\r\n__decorate([\r\n    HostListener('mousedown', ['$event'])\r\n], StageComponent.prototype, \"onMouseDown\", null);\r\n__decorate([\r\n    HostListener('touchstart', ['$event'])\r\n], StageComponent.prototype, \"onTouchStart\", null);\r\n__decorate([\r\n    HostListener('touchcancel', ['$event'])\r\n], StageComponent.prototype, \"onTouchCancel\", null);\r\n__decorate([\r\n    HostListener('dragstart')\r\n], StageComponent.prototype, \"onDragStart\", null);\r\n__decorate([\r\n    HostListener('selectstart')\r\n], StageComponent.prototype, \"onSelectStart\", null);\n\nlet OwlRouterLinkDirective = class OwlRouterLinkDirective {\r\n    constructor(router, route, tabIndex, renderer, el) {\r\n        this.router = router;\r\n        this.route = route;\r\n        this.stopLink = false;\r\n        this.commands = [];\r\n        if (tabIndex == null) {\r\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\r\n        }\r\n    }\r\n    set owlRouterLink(commands) {\r\n        if (commands != null) {\r\n            this.commands = Array.isArray(commands) ? commands : [commands];\r\n        }\r\n        else {\r\n            this.commands = [];\r\n        }\r\n    }\r\n    /**\r\n     * @deprecated 4.0.0 use `queryParamsHandling` instead.\r\n     */\r\n    set preserveQueryParams(value) {\r\n        if (isDevMode() && console && console.warn) {\r\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\r\n        }\r\n        this.preserve = value;\r\n    }\r\n    onClick() {\r\n        const extras = {\r\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\r\n            replaceUrl: attrBoolValue(this.replaceUrl),\r\n        };\r\n        if (this.stopLink) {\r\n            return false;\r\n        }\r\n        this.router.navigateByUrl(this.urlTree, extras);\r\n        return true;\r\n    }\r\n    get urlTree() {\r\n        return this.router.createUrlTree(this.commands, {\r\n            relativeTo: this.route,\r\n            queryParams: this.queryParams,\r\n            fragment: this.fragment,\r\n            preserveQueryParams: attrBoolValue(this.preserve),\r\n            queryParamsHandling: this.queryParamsHandling,\r\n            preserveFragment: attrBoolValue(this.preserveFragment),\r\n        });\r\n    }\r\n};\nOwlRouterLinkDirective.ɵfac = function OwlRouterLinkDirective_Factory(t) { return new (t || OwlRouterLinkDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nOwlRouterLinkDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: OwlRouterLinkDirective, selectors: [[\"\", \"owlRouterLink\", \"\", 5, \"a\"]], hostBindings: function OwlRouterLinkDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function OwlRouterLinkDirective_click_HostBindingHandler() { return ctx.onClick(); });\n    } }, inputs: { stopLink: \"stopLink\", owlRouterLink: \"owlRouterLink\", preserveQueryParams: \"preserveQueryParams\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\" } });\r\nOwlRouterLinkDirective.ctorParameters = () => [\r\n    { type: Router },\r\n    { type: ActivatedRoute },\r\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\r\n    { type: Renderer2 },\r\n    { type: ElementRef }\r\n];\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"queryParams\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"fragment\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"queryParamsHandling\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"preserveFragment\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"skipLocationChange\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"replaceUrl\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"stopLink\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"owlRouterLink\", null);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkDirective.prototype, \"preserveQueryParams\", null);\r\n__decorate([\r\n    HostListener('click')\r\n], OwlRouterLinkDirective.prototype, \"onClick\", null);\r\nOwlRouterLinkDirective = __decorate([ __param(2, Attribute('tabindex'))\r\n], OwlRouterLinkDirective);\r\n/**\r\n * @description\r\n *\r\n * Lets you link to specific routes in your app.\r\n *\r\n * See `RouterLink` for more information.\r\n *\r\n * @ngModule RouterModule\r\n *\r\n * @publicApi\r\n */\r\nlet OwlRouterLinkWithHrefDirective = class OwlRouterLinkWithHrefDirective {\r\n    constructor(router, route, locationStrategy) {\r\n        this.router = router;\r\n        this.route = route;\r\n        this.locationStrategy = locationStrategy;\r\n        this.stopLink = false;\r\n        this.commands = [];\r\n        this.subscription = router.events.subscribe((s) => {\r\n            if (s instanceof NavigationEnd) {\r\n                this.updateTargetUrlAndHref();\r\n            }\r\n        });\r\n    }\r\n    set owlRouterLink(commands) {\r\n        if (commands != null) {\r\n            this.commands = Array.isArray(commands) ? commands : [commands];\r\n        }\r\n        else {\r\n            this.commands = [];\r\n        }\r\n    }\r\n    set preserveQueryParams(value) {\r\n        if (isDevMode() && console && console.warn) {\r\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\r\n        }\r\n        this.preserve = value;\r\n    }\r\n    ngOnChanges(changes) { this.updateTargetUrlAndHref(); }\r\n    ngOnDestroy() { this.subscription.unsubscribe(); }\r\n    onClick(button, ctrlKey, metaKey, shiftKey) {\r\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\r\n            return true;\r\n        }\r\n        if (typeof this.target === 'string' && this.target !== '_self') {\r\n            return true;\r\n        }\r\n        if (this.stopLink) {\r\n            return false;\r\n        }\r\n        const extras = {\r\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\r\n            replaceUrl: attrBoolValue(this.replaceUrl),\r\n        };\r\n        this.router.navigateByUrl(this.urlTree, extras);\r\n        return false;\r\n    }\r\n    updateTargetUrlAndHref() {\r\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\r\n    }\r\n    get urlTree() {\r\n        return this.router.createUrlTree(this.commands, {\r\n            relativeTo: this.route,\r\n            queryParams: this.queryParams,\r\n            fragment: this.fragment,\r\n            preserveQueryParams: attrBoolValue(this.preserve),\r\n            queryParamsHandling: this.queryParamsHandling,\r\n            preserveFragment: attrBoolValue(this.preserveFragment),\r\n        });\r\n    }\r\n};\nOwlRouterLinkWithHrefDirective.ɵfac = function OwlRouterLinkWithHrefDirective_Factory(t) { return new (t || OwlRouterLinkWithHrefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.LocationStrategy)); };\nOwlRouterLinkWithHrefDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: OwlRouterLinkWithHrefDirective, selectors: [[\"a\", \"owlRouterLink\", \"\"]], hostVars: 2, hostBindings: function OwlRouterLinkWithHrefDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function OwlRouterLinkWithHrefDirective_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵattribute(\"target\", ctx.target);\n    } }, inputs: { stopLink: \"stopLink\", owlRouterLink: \"owlRouterLink\", preserveQueryParams: \"preserveQueryParams\", target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nOwlRouterLinkWithHrefDirective.ctorParameters = () => [\r\n    { type: Router },\r\n    { type: ActivatedRoute },\r\n    { type: LocationStrategy }\r\n];\r\n__decorate([\r\n    HostBinding('attr.target'), Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"target\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"queryParams\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"fragment\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"queryParamsHandling\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"preserveFragment\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"skipLocationChange\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"replaceUrl\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"stopLink\", void 0);\r\n__decorate([\r\n    HostBinding()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"href\", void 0);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"owlRouterLink\", null);\r\n__decorate([\r\n    Input()\r\n], OwlRouterLinkWithHrefDirective.prototype, \"preserveQueryParams\", null);\r\n__decorate([\r\n    HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'])\r\n], OwlRouterLinkWithHrefDirective.prototype, \"onClick\", null);\r\nfunction attrBoolValue(s) {\r\n    return s === '' || !!s;\r\n}\n\nconst routes = [];\r\nlet CarouselModule = class CarouselModule {\r\n};\nCarouselModule.ɵfac = function CarouselModule_Factory(t) { return new (t || CarouselModule)(); };\nCarouselModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CarouselModule });\nCarouselModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger], imports: [[\n            CommonModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ResizeService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.EventManager }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OwlLogger, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ErrorHandler }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselService, [{\n        type: Injectable\n    }], function () { return [{ type: OwlLogger }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigationService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserWindowRef, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserDocumentRef, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoplayService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [WINDOW]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LazyLoadService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AnimateService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoHeightService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HashService, [{\n        type: Injectable\n    }], function () { return [{ type: CarouselService }, { type: ɵngcc2.ActivatedRoute, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.Router, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselSlideDirective, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[carouselSlide]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { id: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], dotContent: [{\n            type: Input\n        }], dataHash: [{\n            type: Input\n        }], dataMerge: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselComponent, [{\n        type: Component,\n        args: [{\n                selector: 'owl-carousel-o',\n                template: `\r\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\r\n      [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\r\n                  'owl-loaded': owlDOMData?.isLoaded,\r\n                  'owl-responsive': owlDOMData?.isResponsive,\r\n                  'owl-drag': owlDOMData?.isMouseDragable,\r\n                  'owl-grab': owlDOMData?.isGrab}\"\r\n      (mouseover)=\"startPausing()\"\r\n      (mouseleave)=\"startPlayML()\"\r\n      (touchstart)=\"startPausing()\"\r\n      (touchend)=\"startPlayTE()\">\r\n\r\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\r\n        <owl-stage [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\r\n                    [stageData]=\"stageData\"\r\n                    [slidesData]=\"slidesData\"></owl-stage>\r\n      </div> <!-- /.owl-stage-outer -->\r\n      <ng-container *ngIf=\"slides.toArray().length\">\r\n        <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\r\n          <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\" [innerHTML]=\"navData?.prev?.htmlText\"></div>\r\n          <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\" [innerHTML]=\"navData?.next?.htmlText\"></div>\r\n        </div> <!-- /.owl-nav -->\r\n        <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\r\n          <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\" [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\r\n            <span [innerHTML]=\"dot.innerContent\"></span>\r\n          </div>\r\n        </div> <!-- /.owl-dots -->\r\n      </ng-container>\r\n    </div> <!-- /.owl-carousel owl-loaded -->\r\n  `,\n                providers: [\n                    NavigationService,\n                    AutoplayService,\n                    CarouselService,\n                    LazyLoadService,\n                    AnimateService,\n                    AutoHeightService,\n                    HashService\n                ],\n                styles: [`.owl-theme { display: block; }`]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ResizeService }, { type: CarouselService }, { type: NavigationService }, { type: AutoplayService }, { type: LazyLoadService }, { type: AnimateService }, { type: AutoHeightService }, { type: HashService }, { type: OwlLogger }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { translated: [{\n            type: Output\n        }], dragging: [{\n            type: Output\n        }], change: [{\n            type: Output\n        }], changed: [{\n            type: Output\n        }], initialized: [{\n            type: Output\n        }], onVisibilityChange: [{\n            type: HostListener,\n            args: ['document:visibilitychange', ['$event']]\n        }], slides: [{\n            type: ContentChildren,\n            args: [CarouselSlideDirective]\n        }], options: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StageComponent, [{\n        type: Component,\n        args: [{\n                selector: 'owl-stage',\n                template: `\r\n    <div>\r\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\r\n                                        'transform': stageData.transform,\r\n                                        'transition': stageData.transition,\r\n                                        'padding-left': stageData.paddingL ? stageData.paddingL + 'px' : '',\r\n                                        'padding-right': stageData.paddingR ? stageData.paddingR + 'px' : '' }\"\r\n          (transitionend)=\"onTransitionEnd()\">\r\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\r\n          <div class=\"owl-item\" [ngClass]=\"slide.classes\"\r\n                                [ngStyle]=\"{'width': slide.width + 'px',\r\n                                            'margin-left': slide.marginL ? slide.marginL + 'px' : '',\r\n                                            'margin-right': slide.marginR ? slide.marginR + 'px' : '',\r\n                                            'left': slide.left}\"\r\n                                (animationend)=\"clear(slide.id)\"\r\n                                [@autoHeight]=\"slide.heightState\">\r\n            <ng-template *ngIf=\"slide.load\" [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\r\n          </div><!-- /.owl-item -->\r\n        </ng-container>\r\n      </div><!-- /.owl-stage -->\r\n    </div>\r\n  `,\n                animations: [\n                    trigger('autoHeight', [\n                        state('nulled', style({ height: 0 })),\n                        state('full', style({ height: '*' })),\n                        transition('full => nulled', [\n                            // style({height: '*'}),\n                            animate('700ms 350ms')\n                        ]),\n                        transition('nulled => full', [\n                            // style({height: 0}),\n                            animate(350)\n                        ]),\n                    ])\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: CarouselService }, { type: AnimateService }]; }, { onMouseDown: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], onTouchStart: [{\n            type: HostListener,\n            args: ['touchstart', ['$event']]\n        }], onTouchCancel: [{\n            type: HostListener,\n            args: ['touchcancel', ['$event']]\n        }], onDragStart: [{\n            type: HostListener,\n            args: ['dragstart']\n        }], onSelectStart: [{\n            type: HostListener,\n            args: ['selectstart']\n        }], owlDraggable: [{\n            type: Input\n        }], stageData: [{\n            type: Input\n        }], slidesData: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OwlRouterLinkDirective, [{\n        type: Directive,\n        args: [{ selector: ':not(a)[owlRouterLink]' }]\n    }], function () { return [{ type: ɵngcc2.Router }, { type: ɵngcc2.ActivatedRoute }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { stopLink: [{\n            type: Input\n        }], owlRouterLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OwlRouterLinkWithHrefDirective, [{\n        type: Directive,\n        args: [{ selector: 'a[owlRouterLink]' }]\n    }], function () { return [{ type: ɵngcc2.Router }, { type: ɵngcc2.ActivatedRoute }, { type: ɵngcc3.LocationStrategy }]; }, { stopLink: [{\n            type: Input\n        }], owlRouterLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]\n        }], href: [{\n            type: HostBinding\n        }], target: [{\n            type: HostBinding,\n            args: ['attr.target']\n        }, {\n            type: Input\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                ],\n                declarations: [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n                exports: [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n                providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, { declarations: function () { return [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective]; } }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CarouselComponent, CarouselModule, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective, SlidesOutputData, NavigationService as ɵa, CarouselService as ɵb, OwlLogger as ɵc, AutoplayService as ɵd, WINDOW as ɵe, WindowRef as ɵf, BrowserWindowRef as ɵg, windowFactory as ɵh, browserWindowProvider as ɵi, windowProvider as ɵj, WINDOW_PROVIDERS as ɵk, DOCUMENT as ɵl, DocumentRef as ɵm, BrowserDocumentRef as ɵn, documentFactory as ɵo, browserDocumentProvider as ɵp, documentProvider as ɵq, DOCUMENT_PROVIDERS as ɵr, LazyLoadService as ɵs, AnimateService as ɵt, AutoHeightService as ɵu, HashService as ɵv, ResizeService as ɵw, StageComponent as ɵx };\n\n","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n"],"names":[],"sourceRoot":"webpack:///"}